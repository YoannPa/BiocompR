% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggfusion.R
\name{ggfusion.free}
\alias{ggfusion.free}
\title{Draws 2 triangle matrices fused together in a single plot.}
\usage{
ggfusion.free(
  sample.names,
  upper.mat,
  lower.mat,
  order.method = "hclust",
  order.select = "upper",
  hclust.method = "complete",
  dendrograms = FALSE,
  annot.grps = list(Groups = seq(length(sample.names))),
  annot.pal = grDevices::rainbow(n = length(sample.names)),
  annot.size = 1,
  annot_theme = ggplot2::theme(axis.ticks.x.top = ggplot2::element_line(color = "black"),
    axis.ticks.y.right = ggplot2::element_blank(), axis.title.x =
    ggplot2::element_blank(), axis.text.x.top = ggplot2::element_text(size = 10, angle =
    90, vjust = 0.5, hjust = 0, color = "black"), axis.text.y.right =
    ggplot2::element_text(size = 12, color = "black"), plot.margin = ggplot2::margin(0.1,
    0, 0, 0, unit = "cm")),
  theme_legend = NULL,
  lgd.merge = FALSE,
  lgd.ncol = NULL,
  lgd.space.height = 26,
  lgd.space.width = 1,
  dend.size = 1,
  grid_col = "white",
  grid_linewidth = 0.3,
  upper_theme = NULL,
  upper_scale_fill_grad = ggplot2::scale_fill_gradientn(colors =
    BiocompR::biopalette(name = "viridis_C_plasma"), name = "Upper\\ntriangle values"),
  upper_guide_custom_bar = ggplot2::guide_colorbar(barheight = 10, barwidth = 0.7,
    ticks.linewidth = 0.5, ticks.colour = "black", frame.linewidth = 0.5, frame.colour =
    "black"),
  lower_theme = NULL,
  lower_scale_fill_grad = ggplot2::scale_fill_gradientn(colors =
    BiocompR::biopalette(name = "viridis_D_viridis"), name = "Lower\\ntriangle values"),
  lower_guide_custom_bar = ggplot2::guide_colorbar(barheight = 0.7, barwidth = 10,
    ticks.linewidth = 0.5, ticks.colour = "black", frame.linewidth = 0.5, frame.colour =
    "black"),
  diagonal_col = "white",
  verbose = FALSE
)
}
\arguments{
\item{sample.names}{A \code{character} vector: usually the colnames/rownames
of your input matrices 'upper.mat' and 'lower.mat'.}

\item{upper.mat}{A numerical \code{matrix} that will be displayed as the
upper triangle part of the fusion plot.}

\item{lower.mat}{A numerical \code{matrix} that will be displayed as the
lower triangle part of the fusion plot.}

\item{order.method}{A \code{character} specifying the ordering method to
apply.\cr Possible ordering methods are:
\itemize{
 \item{'AOE' - angular order of the eigenvectors.}
 \item{'FPC' - first principal component order.}
 \item{'hclust' - hierarchical clustering order.}
 \item{'alphabet' - alphabetical order}
 \item{'default'}
}}

\item{order.select}{A \code{character} specifying comparison results to use
for the clustering.\cr Possible values are 'upper' or
'lower'.}

\item{hclust.method}{A \code{character} specifying the method to use
for the hierarchical clustering if the ordering
method is 'hclust'.\cr Possible methods are:
'ward.D','ward.D2', 'single', 'complete',
'average' (= UPGMA), 'mcquitty' (= WPGMA),
'median' (= WPGMC) or 'centroid' (= UPGMC).}

\item{dendrograms}{A \code{logical} vector to specify whether dendrograms
should be plotted with the fusion plot.
\itemize{
 \item{If dendrograms = TRUE: both dendrograms on row
       and columns of the matrix will be plotted.}
 \item{If dendrograms = FALSE: both dendrograms on
       rows and columns of the matrix will NOT be
       plotted.}
 \item{If the vector is of length 2: the first logical
       will apply for rows, and the second logical
       will apply for columns.}
}}

\item{annot.grps}{A \code{list} of vectors of groups to which
variables belongs for the annotation sidebars.
Vectors' lengths have to match the number of
variables.}

\item{annot.pal}{A \code{vector} or a list of vectors containing
colors as characters for the annotation
sidebars. The length of vectors has to match the
number of levels of vectors listed in
'annot.grps'. If a list is provided, its length
must match the length of the list provided to
'annot.grps'.}

\item{annot.size}{An \code{integer} to increase or decrease the
size of the annotation side bar.}

\item{theme_legend}{A ggplot2 \code{theme} to specify any theme parameter
you wish to custom on annotations'legends
(Default: theme_legend = NULL). For more information
about how to define a theme, see
\link[ggplot2]{theme}.}

\item{lgd.merge}{A \code{logical} specifying whether the legends of
multiple annotation bars should be merged
(lgd.merge = TRUE) or remain separated
(lgd.merge = FALSE). lgd.merge is especially useful
when you want to map the same color palette to
multiple annotations sharing the same values
(Default: lgd.merge = FALSE).}

\item{lgd.ncol}{An \code{integer} to override the internal legend
layout build, to specify the number of columns on
which legends'keys should be displayed
(Default: lgd.ncol = NULL).}

\item{lgd.space.height}{An \code{integer} specifying the height of the legend
space (Default: lgd.space.height = 26).}

\item{lgd.space.width}{A \code{numeric} specifying the width of the legend
space (Default: lgd.space.width = 1).}

\item{dend.size}{A \code{numeric} vector defining row and column
dendrograms size (Default: dend.size = 1).
\itemize{
 \item{If dend.size is a \code{numeric}: the value is
       used to set both the width of the dendrogram
       built on rows, and the height of the dendrogram
       built on columns.}
 \item{If dend.size is a \code{numeric} vector of
       length 2: the first numeric will apply to the
       dendrogram built on rows, and the second
       numeric will apply to the dendrogram built on
       columns.}
}}

\item{grid_col}{A \code{character} specifying the color of the
grid.}

\item{grid_linewidth}{A \code{double} value for the thickness of the
grid.}

\item{upper_theme}{A ggplot2 \code{theme} to specify any theme parameter
you wish to custom the upper triangle of the fusion
plot (Default: upper_theme = NULL). For more
information about how to define a theme, see
\link[ggplot2]{theme}.}

\item{upper_scale_fill_grad}{A \code{ScaleContinous} object generated by
ggplot2 functions such as
\link[ggplot2]{scale_fill_gradient},
\link[ggplot2]{scale_fill_gradient2} or
\link[ggplot2]{scale_fill_gradientn} to
customize the color bar associated to the upper
triangle of the fusion plot.}

\item{upper_guide_custom_bar}{A \code{guide} object generated by the ggplot2
function \link[ggplot2]{guide_colorbar} to
custom the appearance of the color bar
associated to the upper triangle of the fusion
plot.
(see also 'upper_scale_fill_grad' option).}

\item{lower_theme}{A ggplot2 \code{theme} to specify any theme parameter
you wish to custom the lower triangle of the fusion
plot (Default: lower_theme = NULL). For more
information about how to define a theme, see
\link[ggplot2]{theme}.}

\item{lower_scale_fill_grad}{A \code{ScaleContinous} object generated by
ggplot2 functions such as
\link[ggplot2]{scale_fill_gradient},
\link[ggplot2]{scale_fill_gradient2} or
\link[ggplot2]{scale_fill_gradientn} to
customize the color bar associated to the lower
triangle of the fusion plot.}

\item{lower_guide_custom_bar}{A \code{guide} object generated by the ggplot2
function \link[ggplot2]{guide_colorbar} to
custom the appearance of the color bar
associated to the lower triangle of the fusion
plot.
(see also 'lower_scale_fill_grad' option).}

\item{diagonal_col}{A \code{character} defining the color of cells
with of the empty diagonal.}

\item{verbose}{A \code{logical} to display information about the
step-by-step processing of the data if TRUE
(Default: verbose = FALSE).}
}
\value{
A \code{type} object returned description.
}
\description{
Draws 2 triangle matrices fused together in a single plot.
}
\examples{
# Compute Pairwise t test and adjust P-values using Benjamini-Horberg method
airquality <- data.table::as.data.table(airquality)
airquality[, Month:= factor(Month, labels = month.abb[5:9])]
mat_pval <- pairwise.t.test(
    x = airquality$Ozone, g = airquality$Month,
    p.adjust.method = "BH")$p.value
mat_pval <- cbind(rbind(NA, mat_pval), NA)
colnames(mat_pval) <- levels(airquality$Month)
rownames(mat_pval) <- levels(airquality$Month)
mat_pval[upper.tri(mat_pval)] <- t(mat_pval)[upper.tri(mat_pval)]
mat_pval <- -log10(mat_pval)
# Compute Kolmogorov-Smirnov distance between months' measures
df_month <- as.data.frame(data.table::dcast(
    data = airquality, Day~Month, value.var = "Ozone")[, c(2:6)])
ks_res <- pairwise.ks(data = df_month)$res.statistic
# Draw the most basic ggfusion.free plot based on these results
ggfusion.free(
    sample.names = levels(airquality$Month), upper.mat = mat_pval,
    lower.mat = ks_res)
# Custom legends to describe what data your fusion plot shows
ggfusion.free(
    sample.names = levels(airquality$Month), upper.mat = mat_pval,
    lower.mat = ks_res, dendrograms = TRUE, # Show the clustering
    # Change annotation title and use a color palette from biopalette()
    annot.grps = list("Months" = levels(airquality$Month)),
    annot.pal = BiocompR::biopalette(name = "ggsci_Frontiers")[1:5],
    # Custom upper triangle legend
    upper_scale_fill_grad = ggplot2::scale_fill_gradient2(
        low = "darkblue", mid = "white", high = "darkred",
        midpoint = -log10(0.05), name = "Student test\n-log10(P-values)",
        limits = c(0, 4)),
    # Custom upper triangle legend using a viridis palette from biopalette()
    lower_scale_fill_grad = ggplot2::scale_fill_gradientn(
        colors = BiocompR::biopalette(name = "viridis_H_turbo"),
        name = "Kolmogorov-Smirnov\ndistances", limits = c(0, 1)),
    # Modify lower triangle's legend justification
    lower_theme = ggplot2::theme(legend.justification = c(0.3, 0.5)))
}
\author{
Yoann Pageaud.
}

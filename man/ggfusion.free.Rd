% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggfusion.R
\name{ggfusion.free}
\alias{ggfusion.free}
\title{Draws 2 triangle matrices fused together in a single plot.}
\usage{
ggfusion.free(
  sample.names,
  upper.mat,
  lower.mat,
  order.method = "hclust",
  order.select = "upper",
  hclust.method = "complete",
  dendrograms = FALSE,
  annot.grps = list(Groups = seq(length(sample.names))),
  annot.pal = grDevices::rainbow(n = length(sample.names)),
  annot.size = 1,
  theme_legend = NULL,
  lgd.merge = FALSE,
  lgd.ncol = NULL,
  lgd.space.height = 26,
  lgd.space.width = 1,
  dend.size = 1,
  grid_col = "white",
  grid_linewidth = 0.3,
  upper_theme = NULL,
  upper_scale_fill_grad = ggplot2::scale_fill_gradientn(colors =
    BiocompR::biopalette(name = "viridis_C_plasma"), name = "Upper\\ntriangle values"),
  upper_guide_custom_bar = ggplot2::guide_colorbar(barheight = 10, barwidth = 0.7,
    ticks.linewidth = 0.5, ticks.colour = "black", frame.linewidth = 0.5, frame.colour =
    "black"),
  lower_theme = NULL,
  lower_scale_fill_grad = ggplot2::scale_fill_gradientn(colors =
    BiocompR::biopalette(name = "viridis_D_viridis"), name = "Lower\\ntriangle values"),
  lower_guide_custom_bar = ggplot2::guide_colorbar(barheight = 0.7, barwidth = 10,
    ticks.linewidth = 0.5, ticks.colour = "black", frame.linewidth = 0.5, frame.colour =
    "black"),
  diagonal_col = "white",
  plot_title = NULL,
  verbose = FALSE
)
}
\arguments{
\item{param1}{A \code{type} parameter description.}
}
\value{
A \code{type} object returned description.
}
\description{
Draws 2 triangle matrices fused together in a single plot.
}
\examples{
# Compute Pairwise t test and adjust P-values using Benjamini-Horberg method
airquality <- data.table::as.data.table(airquality)
airquality[, Month:= factor(Month, labels = month.abb[5:9])]
mat_pval <- pairwise.t.test(
    x = airquality$Ozone, g = airquality$Month,
    p.adjust.method = "BH")$p.value
mat_pval <- cbind(rbind(NA, mat_pval), NA)
colnames(mat_pval) <- levels(airquality$Month)
rownames(mat_pval) <- levels(airquality$Month)
mat_pval[upper.tri(mat_pval)] <- t(mat_pval)[upper.tri(mat_pval)]
mat_pval <- -log10(mat_pval)
# Compute Kolmogorov-Smirnov distance between months' measures
df_month <- as.data.frame(data.table::dcast(
    data = airquality, Day~Month, value.var = "Ozone")[, c(2:6)])
ks_res <- pairwise.ks(data = df_month)$res.statistic
# Draw the most basic ggfusion.free plot based on these results
ggfusion.free(
    sample.names = levels(airquality$Month), upper.mat = mat_pval,
    lower.mat = ks_res)
}
\author{
Yoann Pageaud.
}

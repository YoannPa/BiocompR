% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggbipca.R
\name{ggbipca}
\alias{ggbipca}
\title{Computes and draws a custom PCA biplot.}
\usage{
ggbipca(
  prcomp.res,
  data,
  PCx = 1,
  PCy = 2,
  scale = 1,
  point.size = 1,
  color.data = NULL,
  fill.data = NULL,
  shape.data = NULL,
  loadings = FALSE,
  loadings.col = "red",
  top.load.by.quad = NULL,
  load.above.x = NULL,
  load.above.y = NULL,
  load.below.x = NULL,
  load.below.y = NULL
)
}
\arguments{
\item{prcomp.res}{A PCA result of classes \code{prcomp} or
\code{irlba_prcomp} resulting from stats::prcomp()
or irlba::prcomp_irlba().}

\item{data}{A \code{data.table} containing annotations matching
data in 'prcomp.res'.}

\item{PCx}{An \code{integer} matching the principal component
values to display on X-axis.}

\item{PCy}{An \code{integer} matching the principal component
values to display on Y-axis.}

\item{scale}{A \code{double} scaling parameter, disabled by 0.}

\item{point.size}{A \code{double} specifying the size of points.}

\item{color.data}{A \code{character} specifying the column name in
'data' to be used to map colors to points.}

\item{fill.data}{A \code{character} specifying the column name in
'data' to be used to map filling colors to points
(Important: this parameter will only work if
associated with 'shape.data', and only if input
values provided to scale_shape_manual() are
comprised between 21 and 25).}

\item{shape.data}{A \code{character} specifying the column name in
'data' to be used to map shapes to points.}

\item{loadings}{A \code{logical} specifying whether the loadings
should be displayed (TRUE) or not (FALSE).}

\item{loadings.col}{A \code{character} specifying a color to be used
for loadings.}

\item{top.load.by.quad}{An \code{integer} specifying the top n most
important loadings to be displayed in the four
quadrants of the biplot graph (by quadrants). This
parameters allows to display only the most
important loadings, and to hide the less important
ones, to improve visibility when there is too many
of them.}

\item{load.above.x}{A \code{double} specifying the minimum value of the
X-coordinate for loadings to be displayed on the
plot.}

\item{load.above.y}{A \code{double} specifying the minimum value of the
Y-coordinate for loadings to be displayed on the
plot.}

\item{load.below.x}{A \code{double} specifying the maximum value of the
X-coordinate for loadings to be displayed on the
plot.}

\item{load.below.y}{A \code{double} specifying the maximum value of the
Y-coordinate for loadings to be displayed on the
plot.}
}
\value{
A \code{gg} plot of a PCA biplot.
}
\description{
Computes and draws a custom PCA biplot.
}
\examples{
#Get PCA results
pca.res <- prcomp(iris[,-5])
#Draw the simplest biplot of PC1 and PC2:
ggbipca(prcomp.res = pca.res, data = iris)
#Draw a biplot of PC2 and PC3:
ggbipca(prcomp.res = pca.res, data = iris, PCx = 2, PCy = 3)
#Change data scale:
ggbipca(prcomp.res = pca.res, data = iris, scale = 2)
#Change points size:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2)
#Color points following Species:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        color.data = "Species")
#Change points shape following Species:
# (could use any other categorical / ordinal value if others available)
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        color.data = "Species", shape.data = "Species")
#Map custom colors:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
       color.data = "Species", shape.data = "Species") +
  scale_color_manual(values = c("green", "red", "orange"))
#Map custom point shapes:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        color.data = "Species", shape.data = "Species") +
  scale_color_manual(values = c("green", "red", "orange")) +
  scale_shape_manual(values = c(83, 8, 25))
#Map custom filling colors:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        fill.data = "Species", shape.data = "Species") +
  scale_fill_manual(values = c("green", "royalblue", "orange")) +
  scale_shape_manual(values = c(21, 22, 23)) # Needs values between 21 and 25
#Enable custom filling colors and fix point shapes:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        fill.data = "Species", shape.data = "Species") +
  scale_fill_manual(values = c("green", "royalblue", "orange")) +
  scale_shape_manual(values = rep(21, 3)) # Maps shape 21 to 3 categories
#Map filling colors, outline colors, and point shapes all together:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        fill.data = "Species", shape.data = "Species",
        color.data = "Species") +
  scale_fill_manual(values = c("green", "royalblue", "orange")) +
  scale_color_manual(values = c("black", "red", "blue")) +
  scale_shape_manual(values = c(21, 22, 23)) # Needs values between 21 and 25
#Show loadings:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        color.data = "Species", shape.data = "Species", loadings = TRUE) +
  scale_color_manual(values = c("green", "red", "orange")) +
  scale_shape_manual(values = c(83, 8, 25))
#Change loadings color:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        color.data = "Species", shape.data = "Species", loadings = TRUE,
        loadings.col = "purple") +
  scale_color_manual(values = c("green", "red", "orange")) +
  scale_shape_manual(values = c(83, 8, 25))
#Display the top 1 loading in each quadrant:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        color.data = "Species", shape.data = "Species", loadings = TRUE,
        loadings.col = "purple", top.load.by.quad = 1) +
  scale_color_manual(values = c("green", "red", "orange")) +
  scale_shape_manual(values = c(83, 8, 25))
#Display loadings for which X-coordinates are above 0.05 and Y-coordinates
# are above 0:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        color.data = "Species", shape.data = "Species", loadings = TRUE,
        loadings.col = "purple", load.above.x = 0.05, load.above.y = 0) +
  scale_color_manual(values = c("green", "red", "orange")) +
  scale_shape_manual(values = c(83, 8, 25))
#Display top 1 loading in each quadrant, for which X-coordinates are
# above 0.1:
ggbipca(prcomp.res = pca.res, data = iris, point.size = 2,
        color.data = "Species", shape.data = "Species", loadings = TRUE,
        loadings.col = "purple", top.load.by.quad = 1, load.above.x = 0.1) +
  scale_color_manual(values = c("green", "red", "orange")) +
  scale_shape_manual(values = c(83, 8, 25))
}
\references{
\itemize{
 \item{\href{https://cran.r-project.org/web/packages/ggfortify/index.html}{ggfortify: Data Visualization Tools for Statistical Analysis Results}}
 \item{\href{https://cran.r-project.org/web/packages/ggfortify/vignettes/plot_pca.html}{ggfortify: Plotting PCA (Principal Component Analysis)}}
 \item{\href{https://stats.stackexchange.com/questions/143905/loadings-vs-eigenvectors-in-pca-when-to-use-one-or-another}{Loadings vs eigenvectors in PCA: when to use one or another?}}
 \item{\href{https://stats.stackexchange.com/questions/119746/what-is-the-proper-association-measure-of-a-variable-with-a-pca-component-on-a/}{What is the proper association measure of a variable with a PCA component?}}
}
}
\author{
Yoann Pageaud.
}

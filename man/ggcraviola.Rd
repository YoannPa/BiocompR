% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggcraviola.R
\name{ggcraviola}
\alias{ggcraviola}
\title{Draws a craviola plot (half-splitted and percentile-binned violin plot).}
\usage{
ggcraviola(
  data,
  fill.color = c("blue", "red"),
  craviola.width = 1,
  boxplots = TRUE,
  boxplot.width = 0.04,
  mean.value = TRUE,
  bins = FALSE,
  bins.quantiles = seq(0.1, 0.9, 0.1),
  bin.fun = "sd",
  lines.col = NA
)
}
\arguments{
\item{data}{A \code{data.frame}. 2 formats of data.frame are
                      supported:
\itemize{
 \item{A "complete" data.frame of 5 columns:
  \itemize{
   \item{column 1 must be the samples column.}
   \item{column 2 must be the "grouping" variable column.}
   \item{column 3 must be the "filling color" variable column.}
   \item{column 4 must be the "value" column.}
   \item{column 5 can be the additionnal "opacity" variable column to be used
   if bins = TRUE.}
  }
 }
 \item{A "minimal" data.frame of 2 columns:
  \itemize{
   \item{column 1 must be the samples column. This column can take a maximum
   of 2 possible levels. Based on this column ggcraviola will guess the
   "grouping" and the "filling".}
   \item{column 2 must be the "value" column.}
  }
  The "minimal" data.frame is usefull to easily plot 1 craviola with 2
  distributions. You cannot plot more than 1 craviola with the "minimal"
  data.frame format. the "minimal" format also do not support the binning.
 }
}}

\item{fill.color}{A \code{character} vector of length 2 containing colors
to use to fill the craviolas\cr
(Default: fill.color = c("blue","red")).}

\item{craviola.width}{A \code{double} value to specify the width of
craviolas\cr(Default: craviola.width = 1).}

\item{boxplots}{A \code{logical} specifying if boxplots should be
displayed or not\cr(Default: boxplots = TRUE).}

\item{boxplot.width}{A \code{double} specifying the width of boxplots\cr
(Default: boxplot.width = 0.04).}

\item{mean.value}{A \code{logical} specifying if the red dot of the mean
value should be displayed or not\cr
(Default: mean.value = TRUE).}

\item{bins}{A \code{logical} specifying if the distributions should
be binned following specific quantiles to be displayed
following different opacity thanks to the values in the
5th column of the data data.frame\cr
(Default: bins = FALSE).}

\item{bins.quantiles}{A \code{double} vector to define the limits between the
bins as percentiles of distributions\cr
(Default: bins.quantiles = seq(0.1,0.9,0.1)).}

\item{bin.fun}{A \code{character} to specify the function to apply on
values of the additional variable for each bin of
distrubutions\cr
(Supported: bin.fun = c("sd","mad","mean");
Default: bin.fun = "sd").}

\item{lines.col}{A \code{character} matching a color to use for the
border lines of the craviola's bins\cr
(Default: lines.col = NA).}
}
\value{
A \code{gg} craviola plot.
}
\description{
Draws a craviola plot (half-splitted and percentile-binned violin plot).
}
\examples{
#Using a 'minimal' data.frame:
df.minimal = data.frame(
  Samples = rep(paste0("Sample",c(1:2)),each = 1000),
  Values=c(rnorm(1000,0), rnorm(1000, 0.5)))
ggcraviola(data = df.minimal, lines.col = "black")

#Using a 'complete' data.frame:
df.complete = data.frame(
  Samples=rep(paste0("Sample",c(1:6)),each = 1000),
  Groups=rep(c('A','B','C'),each = 2000),
  Conditions=rep(c('I','J'),each = 1000,3),
  Values=c(rnorm(1000,0), rnorm(1000, 0.5),
    rnorm(1000, 3), rnorm(1000, 3.5),
    rnorm(1000,-3), rnorm(1000, -3.5)))
ggcraviola(data = df.complete, lines.col = "black")

#Using a 'complete' data.frame with support of an additional variable:
df.complete2 = data.frame(
  Samples=rep(paste0("Sample",c(1:6)),each = 1000),
  Groups=rep(c('A','B','C'),each = 2000),
  Conditions=rep(c('I','J'),each = 1000,3),
  Values=c(rnorm(1000,0), rnorm(1000, 0.5),
    rnorm(1000, 3), rnorm(1000, 3.5),
    rnorm(1000,-3), rnorm(1000, -3.5)),
  Scnd.Var = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),
                               each=100),6))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)

#Use ggplot2 to add components and customize the Craviola plot
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
      axis.text = element_text(size = 14, color = "black"),
      axis.title = element_text(size = 15),
      legend.title = element_text(size = 13),
      legend.text = element_text(size = 12),
      panel.background = element_blank(),
      panel.grid.major.x = element_blank(),
      panel.grid.minor.x = element_blank(),
      panel.grid.major.y = element_line(color = "grey"),
      panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
                  values = c("dodgerblue","darkorange"))
}
\author{
Yoann Pageaud.
}

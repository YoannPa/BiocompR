% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggcraviola.R
\name{ggcraviola}
\alias{ggcraviola}
\title{Draws a craviola plot (half-splitted and percentile-binned violin plot).}
\usage{
ggcraviola(
  data,
  craviola.width = 1,
  boxplots = TRUE,
  boxplot.width = 0.04,
  mean.value = TRUE,
  bins = FALSE,
  bins.quantiles = seq(0.1, 0.9, 0.1),
  bin.fun = "stats::sd",
  lines.col = NA,
  linewidth = 0.5,
  verbose = FALSE
)
}
\arguments{
\item{data}{A \code{data.frame}. 2 formats of data.frame are
                      supported:
\itemize{
 \item{A "complete" data.frame of 4 columns:
  \itemize{
   \item{column 1 must be the "group" column. There must not be
         more than 2 conditions in each group.}
   \item{column 2 must be the "condition" column.}
   \item{column 3 must be the "values" column.}
   \item{column 4 is optional. It should be another "values" column to be
         used if bins = TRUE. When 'bins' is TRUE, the function specified in
         'bin.fun' is applied on the column 4 for each bin of each
         distribution. The result obtain for each bin is then associated with
         a specific shade of the filling colors.}
  }
 }
 \item{A "minimal" data.frame of 2 columns:
  \itemize{
   \item{column 1 must be the "samples" column. This column can take a
   maximum of 2 possible levels. Based on this column ggcraviola() will
   extrapolate the "grouping" and the "filling".}
   \item{column 2 must be the "values" column.}
  }
  The "minimal" data.frame is useful to easily plot a single craviola to
  compare 2 distributions. You cannot plot more than 1 craviola with the
  "minimal" data.frame format. the "minimal" format also do not support the
  binning.
 }
}}

\item{craviola.width}{A \code{double} value to specify the width of
craviolas\cr(Default: craviola.width = 1).}

\item{boxplots}{A \code{logical} specifying if boxplots should be
displayed or not\cr(Default: boxplots = TRUE).}

\item{boxplot.width}{A \code{double} specifying the width of boxplots\cr
(Default: boxplot.width = 0.04).}

\item{mean.value}{A \code{logical} specifying if the red dot of the mean
value should be displayed or not\cr
(Default: mean.value = TRUE).}

\item{bins}{A \code{logical} specifying if the distributions should
be binned following specific quantiles to be displayed
following different opacity thanks to the values in the
5th column of the data data.frame\cr
(Default: bins = FALSE).}

\item{bins.quantiles}{A \code{double} vector to define the limits between the
bins as percentiles of distributions\cr
(Default: bins.quantiles = seq(0.1,0.9,0.1)).}

\item{bin.fun}{A \code{character} to specify the function to apply on
values stored in the column 4 of the complete
data.frame, for each bin of each distribution.\cr
Examples of functions supported: bin.fun = c(
"stats::sd", "stats::mad", "base::mean",
"stats::median"); Default: bin.fun = "stats::sd".}

\item{lines.col}{A \code{character} matching a color to use for the
border lines of craviolas' bins\cr
(Default: lines.col = NA).}

\item{verbose}{A \code{logical} to display information about the
step-by-step processing of the data if TRUE
(Default: verbose = FALSE).}
}
\value{
A \code{gg} craviola plot.
}
\description{
Draws a craviola plot (half-splitted and percentile-binned violin plot).
}
\examples{
# Using a 'minimal' data.frame:
df.minimal = data.frame(
  Samples = rep(paste0("Sample", c(1:2)), each = 1000),
  Values = c(rnorm(1000, 0), rnorm(1000, 0.5)))
ggcraviola(data = df.minimal, lines.col = "black")

# Using a 'complete' data.frame:
df.complete = data.frame(
    Groups = rep(c('A', 'B', 'C'), each = 2000),
    Conditions = rep(c('I', 'J'), each = 1000,3),
    Values = c(rnorm(1000, 0), rnorm(1000, 0.5),
               rnorm(1000, 3), rnorm(1000, 3.5),
               rnorm(1000, -3), rnorm(1000, -3.5)))
ggcraviola(data = df.complete, lines.col = "black")

# Using a 'complete' data.frame with support of an additional variable:
df.complete2 = data.frame(
    Groups = rep(c('A', 'B', 'C'), each = 2000),
    Conditions = rep(c('I', 'J'), each = 1000, 3),
    Values = c(rnorm(1000, 0), rnorm(1000, 0.5),
               rnorm(1000, 3), rnorm(1000, 3.5),
               rnorm(1000, -3), rnorm(1000, -3.5)),
    Scnd.Var = rep(rep(x = c(60, 50, 40, 30, 20, 10, 30, 40, 50, 60),
                       each = 100), 6))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)

#Use ggplot2 to add components and customize the Craviola plot
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") + # Rename alpha legend
ggtitle("This is a Craviola plot!") + # Add title
theme(plot.title = element_text(hjust = 0.5),
      axis.text = element_text(size = 14, color = "black"),# Custom axis text
      axis.title = element_text(size = 15),
      legend.title = element_text(size = 13), # Change legend font size
      legend.text = element_text(size = 12),
      panel.background = element_blank(), # Change panel appearance
      panel.grid.major.x = element_blank(),
      panel.grid.minor.x = element_blank(),
      panel.grid.major.y = element_line(color = "grey"),
      panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_fill_manual(
  labels = c("Control", "Case"), # Rename conditions
  values = biopalette(name = "BiocompR_cond3", mute = TRUE)) # Change colors
}
\author{
Yoann Pageaud.
}

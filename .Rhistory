if(verbose){ cat(paste("\t", i, "\n")) }
#Create sub DT
sub.melted <- melted_mat[facet.annot == i]
#Create sub heatmap and remove all customization
sub.htmp <- ggplot2::ggplot() +
ggplot2::geom_tile(data = sub.melted, ggplot2::aes(
x = variable, y = rn, fill = value, color = " ")) +
scale_fill_grad +
ggplot2::scale_color_manual(values = NA) +
ggplot2::scale_x_discrete(expand = c(0, 0)) +
ggplot2::scale_y_discrete(expand = c(0, 0)) +
ggplot2::guides(fill = guide_custom_bar) +
ggplot2::guides(color = ggplot2::guide_legend(
"NA", override.aes = list(fill = scale_fill_grad$na.value),
title.vjust = 0.5, order = 2)) +
ggplot2::labs(x = x.lab, y = y.lab) +
theme_empty + ggplot2::theme(legend.position = "none")
rm(sub.melted)
#Rasterize ggplot into a grob
raster.grob <- BiocompR::raster.ggplot.to.grob(
gg.plot = sub.htmp, filter = raster)
rm(sub.htmp)
#Make grob annotation
raster.annot <- BiocompR::annotation_custom2(
grob = raster.grob, xmin = -Inf, xmax = Inf, ymin = -Inf,
ymax = Inf, data = melted_mat[facet.annot == i])
rm(raster.grob)
return(raster.annot)
})
#Fit the list of raster grobs into a ggplot
htmp <- ggplot2::ggplot(
data = melted_mat, ggplot2::aes(x = variable, y = rn, fill = value)) +
ggplot2::geom_blank() + theme_heatmap +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(x = x.lab, y = y.lab) +
ggplot2::facet_grid(. ~ facet.annot, scales = "free",
space = "free") +
ggplot2::theme(
panel.spacing = ggplot2::unit(0, "lines"),
strip.background = ggplot2::element_blank(),
strip.text = ggplot2::element_blank()) +
ls.rasters
} else {
#Remove all customization
htmp <- htmp + theme_empty
#Catch heatmap in magick::image_graph()
raster.annot <- BiocompR::raster.ggplot.to.grob(
gg.plot = htmp, filter = raster)
#Make grob annotation
raster.annot <- ggplot2::annotation_custom(
raster.grob, -Inf, Inf, -Inf, Inf)
#Fit the raster grob into a ggplot
htmp <- ggplot2::ggplot(
data = melted_mat, ggplot2::aes(x = variable, y = rn, fill = value)) +
ggplot2::geom_blank() + raster.annot + theme_heatmap +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(x = x.lab, y = y.lab)
}
} else { stop("Rasterization filter not supported.") }
if(verbose){ cat("Done.\n") }
}
#Remove melted_mat
rm(melted_mat)
if(verbose){ cat("Converting ggplot into grid object...") }
htmp <- ggplot2::ggplotGrob(x = htmp)
if(verbose){ cat("Done.\n") }
#Resize grobs widths
if(verbose){ cat("Redimensioning grobs...") }
if(dd.cols & dd.rows){
ls.w.grobs <- list(
'dd_col' = ddgr_seg_col, 'sidebar' = col_sidebar_grob, 'htmp' = htmp)
upd.grob_w <- BiocompR::resize.grobs(
ls.grobs = ls.w.grobs, dimensions = "widths", start.unit = 4,
end.unit = 7)
rm(ddgr_seg_col)
} else if(dd.cols & !dd.rows){
ls.w.grobs <- list(
'dd_col' = ddgr_seg_col, 'sidebar' = col_sidebar_grob, 'htmp' = htmp)
upd.grob_w <- BiocompR::resize.grobs(
ls.grobs = ls.w.grobs, dimensions = "widths", start.unit = 3,
end.unit = 7)
rm(ddgr_seg_col)
} else {
ls.w.grobs <- list('sidebar' = col_sidebar_grob, 'htmp' = htmp)
if(is.null(facet)){
upd.grob_w <- BiocompR::resize.grobs(
ls.grobs = ls.w.grobs, dimensions = "widths", start.unit = 3,
end.unit = 7)
} else {
upd.grob_w <- BiocompR::resize.grobs(
ls.grobs = ls.w.grobs, dimensions = "widths", start.unit = 1,
end.unit = max(unlist(lapply(X = ls.w.grobs, FUN = function(i){
length(i[["widths"]]) }))))
}
}
rm(htmp, col_sidebar_grob)
#Resize grobs heights
if(dd.rows){
ls.h.grobs <- list('dd_row' = ddgr_seg_row, 'htmp' = upd.grob_w$htmp)
upd.grob_h <- BiocompR::resize.grobs(
ls.grobs = ls.h.grobs, dimensions = 'heights', start.unit = 7,
end.unit = 9)
rm(ddgr_seg_row)
} else { upd.grob_h <- list("htmp" = upd.grob_w$htmp) }
if(verbose){ cat("Done.\n") }
#Create the Right Panel for legends
if(verbose){ cat("Stacking legends...") }
right.legends <- BiocompR:::stack.grobs.legends(
grobs.list = sidebar_legend, annot.grps = annot.grps,
height.lgds.space = 29)
rm(sidebar_legend)
if(verbose){ cat("Done.\n") }
#Combine Dendrogram with Color Sidebar and Heatmap
if(verbose){ cat("Creating final plot...") }
if(dd.rows & dd.cols){
#Create main grob
main_grob <- gridExtra::arrangeGrob(
grobs = list(grid::textGrob(""), upd.grob_w$dd_col,
grid::textGrob(""), upd.grob_w$sidebar,
upd.grob_h$dd_row, upd.grob_h$htmp),
ncol = 2, nrow = 3, heights = c(dend.col.size + 2, annot.size, 30),
widths = c(dend.row.size + 1, 10))
#Set default legend width space
def.lgd.width <- 2
} else if(!dd.rows & !dd.cols){
#Create main grob
main_grob <- gridExtra::arrangeGrob(grobs = list(
upd.grob_w$sidebar, upd.grob_h$htmp), ncol = 1, nrow = 2,
heights = c(annot.size, 30), widths = 10)
#Set default legend width space
def.lgd.width <- 1
} else if(dd.rows & !dd.cols){
#Create main grob
main_grob <- gridExtra::arrangeGrob(grobs = list(
grid::textGrob(""), upd.grob_w$sidebar, upd.grob_h$dd_row,
upd.grob_h$htmp), ncol = 2, nrow = 2, heights = c(annot.size, 30),
widths = c(dend.row.size + 1, 10))
#Set default legend width space
def.lgd.width <- 2
} else if(!dd.rows & dd.cols){
#Create main grob
main_grob <- gridExtra::arrangeGrob(grobs = list(
upd.grob_w$dd_col, upd.grob_w$sidebar, upd.grob_h$htmp), ncol = 1,
nrow = 3, heights = c(dend.col.size + 2, annot.size, 30), widths = 10)
#Set default legend width space
def.lgd.width <- 1
}
#rm(upd.grob_w, upd.grob_h)
#Final plot
final.plot <- gridExtra::grid.arrange(gridExtra::arrangeGrob(
top = grid::textGrob(
plot.title, gp = grid::gpar(fontsize = 15, font = 1)),
grobs = list(grid::textGrob(paste0(
"Columns ordered by ", method.cols, " distance; Rows ordered by ",
method.rows, " distance; ", nrow(dframe), " ", row.type, "."),
gp = grid::gpar(fontsize = 12, fontface = 3L)),
gridExtra::arrangeGrob(grobs = list(main_grob, right.legends), ncol = 2,
widths = c(20, def.lgd.width + lgd.space.width)),
htmp_legend), nrow = 3, heights = c(3, 50, 6)))
rm(main_grob)
#Prepare results
ls.res <- list(
"result.grob" = final.plot, "heatmap.grob" = upd.grob_h$htmp,
"heatmap.lgd.grob" = htmp_legend, "sidebar.grob" = upd.grob_w$sidebar,
"sidebar.lgds.grob" = right.legends)
rm(final.plot, htmp_legend, right.legends)
if(dd.cols){ ls.res[["cols.dendrogram.grob"]] <- upd.grob_w$dd_col }
if(dd.rows){ ls.res[["rows.dendrogram.grob"]] <- upd.grob_h$dd_row }
rm(upd.grob_w, upd.grob_h)
if(verbose){ cat("Done.\n") }
#Return a list of grobs with final plot and separate grobs.
return(ls.res)
}
target <- "Bisulfite Conversion I"
ncores <- 7
DT.target <- methview.qc::devscore.fluo(
RnBSet = result, samples = samples, target = target, ncores = ncores)
DT.target[, `:=`(probe.labels, paste(paste(Description, Index, sep = "."),
" (ID = ", QC.probe.IDs, ")", sep = ""))]
DT.target <- data.table::dcast(
data = DT.target, formula = ... ~ Samples, value.var = "percent.diff.sqrt")
m_green = data.table:::as.matrix.data.table(x = DT.target[
Cyanine == "Cy5 - Dark Red"][, -c(1:11), ], rownames = 1)
gg2heatmap(
m = m_green, dendrograms = c(FALSE, TRUE),
row.type = paste(target, "QC probes"),
plot.title = "HM450K deviation score of green channel fluorescence intensities",
dist.method = c("none", "manhattan"),
y.lab = paste(target, "quality control probes"), ncores = ncores,
annot.grps = list("example" = rep(x = "group1", length(samples))),
annot.pal = "red", scale_fill_grad = scale_fill_gradientn(
colors = c("mediumblue", "mediumblue", "green3", "green3", "red", "red"),
values = rescale(c(-100, -30, -20, 20, 30, 100)), limits = c(-100, 100),
breaks = seq(-100, 100, by = 20),
labels = c("-100%\nor lower", paste0(seq(-80, 80, by = 20), "%"),
"100%\nor higher"), oob = squish, na.value = "black"),
guide_custom_bar = guide_colorbar(
title = "Fluorescence\ndeviation", title.vjust = 0.86,
ticks.linewidth = 2, barwidth = 25),
theme_heatmap = theme(
axis.title.y.left = ggplot2::element_text(size = 14),
axis.text.y.left = ggplot2::element_text(size = 12, colour = "black"),
axis.ticks.y.left = ggplot2::element_line(color = "black"),
axis.title.x = ggplot2::element_text(size = 14),
axis.text.x = element_text(
size = 8, angle = -90, hjust = 0, vjust = 0.5, colour = "black"),
panel.background = element_rect(fill = "green"),
panel.border = element_rect(color = "green", fill = NA, size = 2)),
cell.size = c(1, 0.95), na.handle = "keep")
unique(metharrayQC$Target)
target <- "Target Removal"
ncores <- 7
DT.target <- methview.qc::devscore.fluo(
RnBSet = result, samples = samples, target = target, ncores = ncores)
DT.target[, `:=`(probe.labels, paste(paste(Description, Index, sep = "."),
" (ID = ", QC.probe.IDs, ")", sep = ""))]
DT.target <- data.table::dcast(
data = DT.target, formula = ... ~ Samples, value.var = "percent.diff.sqrt")
m_green = data.table:::as.matrix.data.table(x = DT.target[
Cyanine == "Cy5 - Dark Red"][, -c(1:11), ], rownames = 1)
gg2heatmap(
m = m_green, dendrograms = c(FALSE, TRUE),
row.type = paste(target, "QC probes"),
plot.title = "HM450K deviation score of green channel fluorescence intensities",
dist.method = c("none", "manhattan"),
y.lab = paste(target, "quality control probes"), ncores = ncores,
annot.grps = list("example" = rep(x = "group1", length(samples))),
annot.pal = "red", scale_fill_grad = scale_fill_gradientn(
colors = c("mediumblue", "mediumblue", "green3", "green3", "red", "red"),
values = rescale(c(-100, -30, -20, 20, 30, 100)), limits = c(-100, 100),
breaks = seq(-100, 100, by = 20),
labels = c("-100%\nor lower", paste0(seq(-80, 80, by = 20), "%"),
"100%\nor higher"), oob = squish, na.value = "black"),
guide_custom_bar = guide_colorbar(
title = "Fluorescence\ndeviation", title.vjust = 0.86,
ticks.linewidth = 2, barwidth = 25),
theme_heatmap = theme(
axis.title.y.left = ggplot2::element_text(size = 14),
axis.text.y.left = ggplot2::element_text(size = 12, colour = "black"),
axis.ticks.y.left = ggplot2::element_line(color = "black"),
axis.title.x = ggplot2::element_text(size = 14),
axis.text.x = element_text(
size = 8, angle = -90, hjust = 0, vjust = 0.5, colour = "black"),
panel.background = element_rect(fill = "green"),
panel.border = element_rect(color = "green", fill = NA, size = 2)),
cell.size = c(1, 0.95), na.handle = "keep")
unique(metharrayQC$Target)
target <- "Extension"
ncores <- 7
DT.target <- methview.qc::devscore.fluo(
RnBSet = result, samples = samples, target = target, ncores = ncores)
DT.target[, `:=`(probe.labels, paste(paste(Description, Index, sep = "."),
" (ID = ", QC.probe.IDs, ")", sep = ""))]
DT.target <- data.table::dcast(
data = DT.target, formula = ... ~ Samples, value.var = "percent.diff.sqrt")
m_green = data.table:::as.matrix.data.table(x = DT.target[
Cyanine == "Cy5 - Dark Red"][, -c(1:11), ], rownames = 1)
gg2heatmap(
m = m_green, dendrograms = c(FALSE, TRUE),
row.type = paste(target, "QC probes"),
plot.title = "HM450K deviation score of green channel fluorescence intensities",
dist.method = c("none", "manhattan"),
y.lab = paste(target, "quality control probes"), ncores = ncores,
annot.grps = list("example" = rep(x = "group1", length(samples))),
annot.pal = "red", scale_fill_grad = scale_fill_gradientn(
colors = c("mediumblue", "mediumblue", "green3", "green3", "red", "red"),
values = rescale(c(-100, -30, -20, 20, 30, 100)), limits = c(-100, 100),
breaks = seq(-100, 100, by = 20),
labels = c("-100%\nor lower", paste0(seq(-80, 80, by = 20), "%"),
"100%\nor higher"), oob = squish, na.value = "black"),
guide_custom_bar = guide_colorbar(
title = "Fluorescence\ndeviation", title.vjust = 0.86,
ticks.linewidth = 2, barwidth = 25),
theme_heatmap = theme(
axis.title.y.left = ggplot2::element_text(size = 14),
axis.text.y.left = ggplot2::element_text(size = 12, colour = "black"),
axis.ticks.y.left = ggplot2::element_line(color = "black"),
axis.title.x = ggplot2::element_text(size = 14),
axis.text.x = element_text(
size = 8, angle = -90, hjust = 0, vjust = 0.5, colour = "black"),
panel.background = element_rect(fill = "green"),
panel.border = element_rect(color = "green", fill = NA, size = 2)),
cell.size = c(1, 0.95), na.handle = "keep")
unique(metharrayQC$Target)
target <- "Negative"
ncores <- 7
DT.target <- methview.qc::devscore.fluo(
RnBSet = result, samples = samples, target = target, ncores = ncores)
DT.target[, `:=`(probe.labels, paste(paste(Description, Index, sep = "."),
" (ID = ", QC.probe.IDs, ")", sep = ""))]
DT.target <- data.table::dcast(
data = DT.target, formula = ... ~ Samples, value.var = "percent.diff.sqrt")
m_green = data.table:::as.matrix.data.table(x = DT.target[
Cyanine == "Cy5 - Dark Red"][, -c(1:11), ], rownames = 1)
gg2heatmap(
m = m_green, dendrograms = c(FALSE, TRUE),
row.type = paste(target, "QC probes"),
plot.title = "HM450K deviation score of green channel fluorescence intensities",
dist.method = c("none", "manhattan"),
y.lab = paste(target, "quality control probes"), ncores = ncores,
annot.grps = list("example" = rep(x = "group1", length(samples))),
annot.pal = "red", scale_fill_grad = scale_fill_gradientn(
colors = c("mediumblue", "mediumblue", "green3", "green3", "red", "red"),
values = rescale(c(-100, -30, -20, 20, 30, 100)), limits = c(-100, 100),
breaks = seq(-100, 100, by = 20),
labels = c("-100%\nor lower", paste0(seq(-80, 80, by = 20), "%"),
"100%\nor higher"), oob = squish, na.value = "black"),
guide_custom_bar = guide_colorbar(
title = "Fluorescence\ndeviation", title.vjust = 0.86,
ticks.linewidth = 2, barwidth = 25),
theme_heatmap = theme(
axis.title.y.left = ggplot2::element_text(size = 14),
axis.text.y.left = ggplot2::element_text(size = 12, colour = "black"),
axis.ticks.y.left = ggplot2::element_line(color = "black"),
axis.title.x = ggplot2::element_text(size = 14),
axis.text.x = element_text(
size = 8, angle = -90, hjust = 0, vjust = 0.5, colour = "black"),
panel.background = element_rect(fill = "green"),
panel.border = element_rect(color = "green", fill = NA, size = 2)),
cell.size = c(1, 0.95), na.handle = "keep")
unique(metharrayQC$Target)
target <- "Norm G"
ncores <- 7
DT.target <- methview.qc::devscore.fluo(
RnBSet = result, samples = samples, target = target, ncores = ncores)
DT.target[, `:=`(probe.labels, paste(paste(Description, Index, sep = "."),
" (ID = ", QC.probe.IDs, ")", sep = ""))]
DT.target <- data.table::dcast(
data = DT.target, formula = ... ~ Samples, value.var = "percent.diff.sqrt")
m_green = data.table:::as.matrix.data.table(x = DT.target[
Cyanine == "Cy5 - Dark Red"][, -c(1:11), ], rownames = 1)
gg2heatmap(
m = m_green, dendrograms = c(FALSE, TRUE),
row.type = paste(target, "QC probes"),
plot.title = "HM450K deviation score of green channel fluorescence intensities",
dist.method = c("none", "manhattan"),
y.lab = paste(target, "quality control probes"), ncores = ncores,
annot.grps = list("example" = rep(x = "group1", length(samples))),
annot.pal = "red", scale_fill_grad = scale_fill_gradientn(
colors = c("mediumblue", "mediumblue", "green3", "green3", "red", "red"),
values = rescale(c(-100, -30, -20, 20, 30, 100)), limits = c(-100, 100),
breaks = seq(-100, 100, by = 20),
labels = c("-100%\nor lower", paste0(seq(-80, 80, by = 20), "%"),
"100%\nor higher"), oob = squish, na.value = "black"),
guide_custom_bar = guide_colorbar(
title = "Fluorescence\ndeviation", title.vjust = 0.86,
ticks.linewidth = 2, barwidth = 25),
theme_heatmap = theme(
axis.title.y.left = ggplot2::element_text(size = 14),
axis.text.y.left = ggplot2::element_text(size = 12, colour = "black"),
axis.ticks.y.left = ggplot2::element_line(color = "black"),
axis.title.x = ggplot2::element_text(size = 14),
axis.text.x = element_text(
size = 8, angle = -90, hjust = 0, vjust = 0.5, colour = "black"),
panel.background = element_rect(fill = "green"),
panel.border = element_rect(color = "green", fill = NA, size = 2)),
cell.size = c(1, 0.95), na.handle = "keep")
unique(metharrayQC$Target)
target <- "Norm A"
ncores <- 7
DT.target <- methview.qc::devscore.fluo(
RnBSet = result, samples = samples, target = target, ncores = ncores)
DT.target[, `:=`(probe.labels, paste(paste(Description, Index, sep = "."),
" (ID = ", QC.probe.IDs, ")", sep = ""))]
DT.target <- data.table::dcast(
data = DT.target, formula = ... ~ Samples, value.var = "percent.diff.sqrt")
m_green = data.table:::as.matrix.data.table(x = DT.target[
Cyanine == "Cy5 - Dark Red"][, -c(1:11), ], rownames = 1)
gg2heatmap(
m = m_green, dendrograms = c(FALSE, TRUE),
row.type = paste(target, "QC probes"),
plot.title = "HM450K deviation score of green channel fluorescence intensities",
dist.method = c("none", "manhattan"),
y.lab = paste(target, "quality control probes"), ncores = ncores,
annot.grps = list("example" = rep(x = "group1", length(samples))),
annot.pal = "red", scale_fill_grad = scale_fill_gradientn(
colors = c("mediumblue", "mediumblue", "green3", "green3", "red", "red"),
values = rescale(c(-100, -30, -20, 20, 30, 100)), limits = c(-100, 100),
breaks = seq(-100, 100, by = 20),
labels = c("-100%\nor lower", paste0(seq(-80, 80, by = 20), "%"),
"100%\nor higher"), oob = squish, na.value = "black"),
guide_custom_bar = guide_colorbar(
title = "Fluorescence\ndeviation", title.vjust = 0.86,
ticks.linewidth = 2, barwidth = 25),
theme_heatmap = theme(
axis.title.y.left = ggplot2::element_text(size = 14),
axis.text.y.left = ggplot2::element_text(size = 12, colour = "black"),
axis.ticks.y.left = ggplot2::element_line(color = "black"),
axis.title.x = ggplot2::element_text(size = 14),
axis.text.x = element_text(
size = 8, angle = -90, hjust = 0, vjust = 0.5, colour = "black"),
panel.background = element_rect(fill = "green"),
panel.border = element_rect(color = "green", fill = NA, size = 2)),
cell.size = c(1, 0.95), na.handle = "keep")
target <- "Norm T"
ncores <- 7
DT.target <- methview.qc::devscore.fluo(
RnBSet = result, samples = samples, target = target, ncores = ncores)
DT.target[, `:=`(probe.labels, paste(paste(Description, Index, sep = "."),
" (ID = ", QC.probe.IDs, ")", sep = ""))]
DT.target <- data.table::dcast(
data = DT.target, formula = ... ~ Samples, value.var = "percent.diff.sqrt")
m_green = data.table:::as.matrix.data.table(x = DT.target[
Cyanine == "Cy5 - Dark Red"][, -c(1:11), ], rownames = 1)
gg2heatmap(
m = m_green, dendrograms = c(FALSE, TRUE),
row.type = paste(target, "QC probes"),
plot.title = "HM450K deviation score of green channel fluorescence intensities",
dist.method = c("none", "manhattan"),
y.lab = paste(target, "quality control probes"), ncores = ncores,
annot.grps = list("example" = rep(x = "group1", length(samples))),
annot.pal = "red", scale_fill_grad = scale_fill_gradientn(
colors = c("mediumblue", "mediumblue", "green3", "green3", "red", "red"),
values = rescale(c(-100, -30, -20, 20, 30, 100)), limits = c(-100, 100),
breaks = seq(-100, 100, by = 20),
labels = c("-100%\nor lower", paste0(seq(-80, 80, by = 20), "%"),
"100%\nor higher"), oob = squish, na.value = "black"),
guide_custom_bar = guide_colorbar(
title = "Fluorescence\ndeviation", title.vjust = 0.86,
ticks.linewidth = 2, barwidth = 25),
theme_heatmap = theme(
axis.title.y.left = ggplot2::element_text(size = 14),
axis.text.y.left = ggplot2::element_text(size = 12, colour = "black"),
axis.ticks.y.left = ggplot2::element_line(color = "black"),
axis.title.x = ggplot2::element_text(size = 14),
axis.text.x = element_text(
size = 8, angle = -90, hjust = 0, vjust = 0.5, colour = "black"),
panel.background = element_rect(fill = "green"),
panel.border = element_rect(color = "green", fill = NA, size = 2)),
cell.size = c(1, 0.95), na.handle = "keep")
target <- "Norm C"
ncores <- 7
DT.target <- methview.qc::devscore.fluo(
RnBSet = result, samples = samples, target = target, ncores = ncores)
DT.target[, `:=`(probe.labels, paste(paste(Description, Index, sep = "."),
" (ID = ", QC.probe.IDs, ")", sep = ""))]
DT.target <- data.table::dcast(
data = DT.target, formula = ... ~ Samples, value.var = "percent.diff.sqrt")
m_green = data.table:::as.matrix.data.table(x = DT.target[
Cyanine == "Cy5 - Dark Red"][, -c(1:11), ], rownames = 1)
gg2heatmap(
m = m_green, dendrograms = c(FALSE, TRUE),
row.type = paste(target, "QC probes"),
plot.title = "HM450K deviation score of green channel fluorescence intensities",
dist.method = c("none", "manhattan"),
y.lab = paste(target, "quality control probes"), ncores = ncores,
annot.grps = list("example" = rep(x = "group1", length(samples))),
annot.pal = "red", scale_fill_grad = scale_fill_gradientn(
colors = c("mediumblue", "mediumblue", "green3", "green3", "red", "red"),
values = rescale(c(-100, -30, -20, 20, 30, 100)), limits = c(-100, 100),
breaks = seq(-100, 100, by = 20),
labels = c("-100%\nor lower", paste0(seq(-80, 80, by = 20), "%"),
"100%\nor higher"), oob = squish, na.value = "black"),
guide_custom_bar = guide_colorbar(
title = "Fluorescence\ndeviation", title.vjust = 0.86,
ticks.linewidth = 2, barwidth = 25),
theme_heatmap = theme(
axis.title.y.left = ggplot2::element_text(size = 14),
axis.text.y.left = ggplot2::element_text(size = 12, colour = "black"),
axis.ticks.y.left = ggplot2::element_line(color = "black"),
axis.title.x = ggplot2::element_text(size = 14),
axis.text.x = element_text(
size = 8, angle = -90, hjust = 0, vjust = 0.5, colour = "black"),
panel.background = element_rect(fill = "green"),
panel.border = element_rect(color = "green", fill = NA, size = 2)),
cell.size = c(1, 0.95), na.handle = "keep")
unique(metharrayQC$Target)
samples <- result@pheno[, 1]
# target <- "Hybridization"
# target <- "Staining"
# target <- "Bisulfite Conversion II"
# target <- "Bisulfite Conversion I"
# target <- "Target Removal"
# target <- "Extension"
target <- "Negative"
# target <- "Norm C"
ncores <- 7
DT.target <- methview.qc::devscore.fluo(
RnBSet = result, samples = samples, target = target, ncores = ncores)
DT.target[, `:=`(probe.labels, paste(paste(Description, Index, sep = "."),
" (ID = ", QC.probe.IDs, ")", sep = ""))]
DT.target <- data.table::dcast(
data = DT.target, formula = ... ~ Samples, value.var = "percent.diff.sqrt")
m_green = data.table:::as.matrix.data.table(x = DT.target[
Cyanine == "Cy5 - Dark Red"][, -c(1:11), ], rownames = 1)
gg2heatmap(
m = m_green, dendrograms = c(TRUE, TRUE),
row.type = paste(target, "QC probes"),
plot.title = "HM450K deviation score of green channel fluorescence intensities",
dist.method = c("manhattan", "manhattan"),
y.lab = paste(target, "quality control probes"), ncores = ncores,
annot.grps = list("example" = rep(x = "group1", length(samples))),
annot.pal = "red", scale_fill_grad = scale_fill_gradientn(
colors = c("mediumblue", "mediumblue", "green3", "green3", "red", "red"),
values = rescale(c(-100, -30, -20, 20, 30, 100)), limits = c(-100, 100),
breaks = seq(-100, 100, by = 20),
labels = c("-100%\nor lower", paste0(seq(-80, 80, by = 20), "%"),
"100%\nor higher"), oob = squish, na.value = "black"),
guide_custom_bar = guide_colorbar(
title = "Fluorescence\ndeviation", title.vjust = 0.86,
ticks.linewidth = 2, barwidth = 25),
theme_heatmap = theme(
axis.title.y.left = ggplot2::element_text(size = 14),
axis.text.y.left = ggplot2::element_text(size = 12, colour = "black"),
axis.ticks.y.left = ggplot2::element_line(color = "black"),
axis.title.x = ggplot2::element_text(size = 14),
axis.text.x = element_text(
size = 8, angle = -90, hjust = 0, vjust = 0.5, colour = "black"),
panel.background = element_rect(fill = "green"),
panel.border = element_rect(color = "green", fill = NA, size = 2)),
cell.size = c(1, 0.95), na.handle = "keep")
devtools::document()

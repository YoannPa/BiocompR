panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
strip.text.y = element_text(size = 14, angle = 0)) + # Change strip text
scale_x_discrete(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#4393C3", "#D6604D")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
legend.title = element_text(size = 13), # Change legend font size
legend.text = element_text(size = 12),
panel.background = element_rect(color = "black", fill = NA), # Change panel appearance
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
strip.text.y = element_text(size = 14, angle = 0)) + # Change strip text
scale_x_discrete(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#4393C3", "#D6604D")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
legend.title = element_text(size = 13), # Change legend font size
legend.text = element_text(size = 12),
panel.background = element_rect(color = "black", fill = NA), # Change panel appearance
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) + # Change strip text
scale_x_discrete(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#4393C3", "#D6604D")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
legend.title = element_text(size = 13), # Change legend font size
legend.text = element_text(size = 12),
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_x_discrete(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#4393C3", "#D6604D")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
legend.position = "bottom",
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_x_discrete(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#4393C3", "#D6604D")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = FALSE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
legend.position = "bottom",
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_x_discrete(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#4393C3", "#D6604D")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = FALSE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
legend.position = "bottom",
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_x_discrete(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#4393C3", "#D6604D")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
df
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
legend.position = "bottom",
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_x_discrete(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#D6604D", "#4393C3")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_x_discrete(expand = c(0, 0)) + #Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#D6604D", "#4393C3")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
devtools::document()
library(BiocompR)
devtools::document()
devtools::document()
devtools::install()
library(BiocompR)
df <- data.frame(
col1 = LETTERS[1:6], col2 = 100:105, col3 = 35:40,
col4 = rep(x = paste0("Group", 1:3), each = 2))
ggcoverage(data = df)
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_x_discrete(expand = c(0, 0)) + # Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#D6604D", "#4393C3")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y")
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(BiocompR)
df <- data.frame(
col1 = LETTERS[1:6], col2 = 100:105, col3 = 35:40,
col4 = rep(x = paste0("Group", 1:3), each = 2))
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_x_discrete(expand = c(0, 0)) + # Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#D6604D", "#4393C3")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
# Expand fully plot panel on Y-axis
scale_y_continuous(
# Expand fully plot panel on X-axis and set new limits
# (useful if some percentages do not appear on the default plot)
expand = c(0, 0), limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE)))) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#D6604D", "#4393C3")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
10^1
10^2
10^0.5
10^1.5
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_y_continuous(
# Expand fully plot panel on X-axis (coordinates have been flipped)
expand = c(0, 0),
# Set new limits (useful if some percentages do not appear on the default plot)
limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE))),
# Change X-axis labels
labels = c("0" = 1, "0.5" = 3.16, "1" = 10, "1.5" = 31.62, "2.0" = 100)) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#D6604D", "#4393C3")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage Barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_y_continuous(
# Expand fully plot panel on X-axis (coordinates have been flipped)
expand = c(0, 0),
# Set new limits (useful if some percentages do not appear on the default plot)
limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE))),
# Change number of breaks
breaks = c(0, 1, 2),
# Change X-axis labels
labels = c("0" = 1, "1" = 10, "2.0" = 100)) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#D6604D", "#4393C3")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
devtools::document()
devtools::install()
library(BiocompR)
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_y_continuous(
# Expand fully plot panel on X-axis (coordinates have been flipped)
expand = c(0, 0),
# Set new limits (useful if percentages do not appear on the default plot)
limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE))),
# Change number of breaks
breaks = c(0, 1, 2),
# Change X-axis labels
labels = c("0" = 1, "1" = 10, "2.0" = 100)) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#D6604D", "#4393C3")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping
df <- data.frame(
col1 = LETTERS[1:6], col2 = 100:105, col3 = 35:40,
col4 = rep(x = paste0("Group", 1:3), each = 2))
ggcoverage(
data = df, round.unit = 0, invert.percent = TRUE, decreasing.order = TRUE,
rev.stack = TRUE, horizontal = TRUE, log.scaled = TRUE) +
ggtitle("This is a ggcoverage barplot!") + # Add title
labs(x = "Samples", y = "Coverages") + #Set X and Y axis titles
theme(
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"), # Custom axis text
axis.title = element_text(size = 15),
# Change legend appearance
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
# Change panel appearance
panel.background = element_rect(color = "black", fill = NA),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey"),
panel.grid.minor.x = element_line(color = "grey"),
# Change strips appearance
strip.background = element_rect(color = "black"),
strip.text.y = element_text(size = 14, angle = 0)) +
scale_y_continuous(
# Expand fully plot panel on X-axis (coordinates have been flipped)
expand = c(0, 0),
# Set new limits (useful if percentages do not appear on the default plot)
limits = c(0, log10(max(df$col2, na.rm = TRUE)) +
0.1*log10(max(df$col2, na.rm = TRUE))),
# Change number of breaks
breaks = c(0, 1, 2),
# Change X-axis labels
labels = c("0" = 1, "1" = 10, "2.0" = 100)) +
guides(fill = guide_legend(title = "Coverage legend")) + # Set legend title
scale_fill_manual(labels = c("Remaining", "Subset"), # Rename conditions
values = c("#D6604D", "#4393C3")) + # Change colors
facet_grid(df$col4 ~ ., scales = "free", space = "free_y") # Add grouping

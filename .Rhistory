#Load NCBI BLAST XML results
blast_xml <- xml2::read_xml(xml_file)
#Get BLAST hits data
hits_dt <- data.table::data.table(
"hits_num" = as.integer(
xml2::xml_text(xml2::xml_find_all(x = blast_xml, xpath = "//Hit_num"))),
"hits_id" = xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hit_id")),
"hits_def" = xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hit_def")),
"hits_accession" = xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hit_accession")),
"hits_len" = as.integer(
xml2::xml_text(xml2::xml_find_all(x = blast_xml, xpath = "//Hit_len"))))
#Get BLAST hit samples data
hsps_dt <- data.table::data.table(
"subject_num" = as.integer(
xml2::xml_text(xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_num"))),
"bit-score" = as.numeric(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_bit-score"))),
"score" = as.integer(
xml2::xml_text(xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_score"))),
"E-value" = as.numeric(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_evalue"))),
"query_start" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_query-from"))),
"query_end" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_query-to"))),
"subject_start" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_hit-from"))),
"subject_end" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_hit-to"))),
"query_frame" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_query-frame"))),
"subject_frame" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_hit-frame"))),
"N_identities" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_identity"))),
"N_positives" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_positive"))),
"N_gaps" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_gaps"))),
"alignment_length" = as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_align-len"))),
"query_alignments" = xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_qseq")),
"subject_alignments" = xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_hseq")),
"midline_alignments" = xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_midline")))
#Add empty 'hits_num' column when no alignment found in the XML file
if(nrow(hsps_dt) == 0){ hsps_dt[, hits_num := integer()] } else {
#Add 'hits_num'
hsps_dt[, hits_num := cumsum(c(1, diff(as.integer(xml2::xml_text(
xml2::xml_find_all(x = blast_xml, xpath = "//Hsp_num")))) != 1))]
}
#Create full BLAST data.table
BLAST.dt <- data.table::merge.data.table(x = hits_dt, y = hsps_dt,
by = "hits_num", all.y = TRUE)
#Return result
return(BLAST.dt)
}
#' Aggregates NCBI BLAST results from multiple XML files into an R data.table.
#'
#' @param dir.to.xmls A \code{character} specifying a directory to be searched
#'                    recursively for NCBI BLAST XML results.
#' @param ncores      An \code{integer} specifying the number of cores or
#'                    threads to be used for parallel processing.
#' @return A \code{data.table} aggregating all NCBI BLAST results from all XML
#'         files found.
#' @author Yoann Pageaud.
#' @export
#' @examples
#' #Aggregate my NCBI BLAST results using 2 cores into an R data.table
#' aggregate_NCBI_BLAST_XMLs2DT(dir.to.xmls = "my_dir/with/NCBI_BLAST_results/",
#'   ncores = 2)
#' @references
#' \itemize{
#'  \item{\href{https://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html}{The Statistics of Sequence Similarity Scores.}}
#'  \item{\href{https://cran.r-project.org/web/packages/hoardeR/index.html}{hoardeR: Collect and Retrieve Annotation Data for Various Genomic Data Using Different Webservices.}}
#'  \item{\href{https://cran.r-project.org/web/packages/xml2/index.html}{xml2: Parse XML.}}
#' }
aggregate_NCBI_BLAST_XMLs2DT <- function(dir.to.xmls, ncores = 1){
#List all XML files in a directory
ls.xmls <- list.files(path = dir.to.xmls, include.dirs = FALSE,
recursive = TRUE, pattern = ".xml")
ls.path <- file.path(dir.to.xmls, ls.xmls)
names(ls.path) <- ls.xmls
#Convert all XMLs found into data.tables in parallel
ls.dt <- parallel::mclapply(
X = ls.path, mc.cores = ncores, FUN = NCBI_BLAST_XML2DT)
bind.dt <- data.table::rbindlist(l = ls.dt, idcol = "file_name")
return(bind.dt)
}
source("PCAWG_Paper/src/convert_NCBI_BLAST_XML_results_into_datatable.R")
subtelomere_blasts <- aggregate_NCBI_BLAST_XMLs2DT(
dir.to.xmls = "PCAWG_Paper/data/hg19_annotations/subtelomeres_BLAST_results/",
ncores = 15)
subtelomere_blasts
subtelomere_blasts[file_name == "10ptel_1-500K_1_12_12_distal/1.xml"]
subtelomere_blasts[file_name == "10ptel_1-500K_1_12_12_distal/1.xml"]$hits_def
subtelomere_blasts[
file_name == "10ptel_1-500K_1_12_12_distal/1.xml",
hits_def == "Homo sapiens chromosome 10, GRCh37.p13 Primary Assembly"]
subtelomere_blasts[
file_name == "10ptel_1-500K_1_12_12_distal/1.xml" &
hits_def == "Homo sapiens chromosome 10, GRCh37.p13 Primary Assembly"]
unique(subtelomere_blasts$hits_def)
#Only keep hits on GRCh37.p13 Primary Assembly
subtelomere_blasts$hits_def
#Only keep hits on GRCh37.p13 Primary Assembly
grepl(pattern = "GRCh37.p13 Primary Assembly", x = subtelomere_blasts$hits_def)
#Only keep hits on GRCh37.p13 Primary Assembly
subtelomere_blasts$hits_def[grepl(pattern = "GRCh37.p13 Primary Assembly", x = subtelomere_blasts$hits_def)]
subtelomere_blasts[grepl(pattern = "GRCh37.p13 Primary Assembly", x = hits_def)]
subtelomere_blasts
subtelomere_blasts$file_name
gsub(pattern = "1.xml", replacement = , x = subtelomere_blasts$file_name)
gsub(pattern = "1.xml", replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "\\/1.xml", replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "w+\\/1.xml", replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "w+\\/1.xml$", replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "\\w+\\/1.xml$", replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "w+\\/1.xml$", replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "\\w+\\/1.xml$", replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "-\\w+\\/1.xml$", replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "-\\w+\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "\\w+\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "\\w+\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "w+\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "(distal | proximal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "proximal\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "proximal | distal\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "proximal|distal\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "proximal|distal\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "_*(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "hg19orientation_|*(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "_1_12_12_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "12_()(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "(1|4)_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "(_new|shortallele|*)_(1|4)_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "_1-500K(_new|shortallele|*)_(1|4)_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "(_new|shortallele|*)_(1|4)_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "_1(-|_)500K(_new|shortallele|*)_(1|4)_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "_1(-|_)500[K]*(_new|shortallele|*)_(1|4)_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_(1|4)_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
gsub(pattern = "(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$", replacement = "", x = unique(subtelomere_blasts$file_name))
subtelomere_blasts$hits_def
subtelomere_blasts <- subtelomere_blasts[
grepl(pattern = "GRCh37.p13 Primary Assembly", x = hits_def)]
unique(subtelomere_blasts$hits_def)
subtelomere_blasts <- aggregate_NCBI_BLAST_XMLs2DT(
dir.to.xmls = "PCAWG_Paper/data/hg19_annotations/subtelomeres_BLAST_results/",
ncores = 15)
grepl(pattern = "\\d\[\\dXY], GRCh37.p13 Primary Assembly", x = unique(subtelomere_blasts$hits_def))
grepl(pattern = "\\d[\\dXY], GRCh37.p13 Primary Assembly", x = unique(subtelomere_blasts$hits_def))
unique(subtelomere_blasts$hits_def)[grepl(pattern = "\\d[\\dXY], GRCh37.p13 Primary Assembly", x = unique(subtelomere_blasts$hits_def))]
unique(subtelomere_blasts$hits_def)[grepl(pattern = "GRCh37.p13 Primary Assembly", x = unique(subtelomere_blasts$hits_def))]
unique(subtelomere_blasts$hits_def)[grepl(pattern = " GRCh37.p13 Primary Assembly", x = unique(subtelomere_blasts$hits_def))]
unique(subtelomere_blasts$hits_def)[grepl(pattern = " GRCh37.p13 Primary Assembly$", x = unique(subtelomere_blasts$hits_def))]
unique(subtelomere_blasts$hits_def)[grepl(pattern = ", GRCh37.p13 Primary Assembly$", x = unique(subtelomere_blasts$hits_def))]
unique(subtelomere_blasts$hits_def)[grepl(pattern = "[\\dXY], GRCh37.p13 Primary Assembly$", x = unique(subtelomere_blasts$hits_def))]
unique(subtelomere_blasts$hits_def)[grepl(pattern = "[0-9XY], GRCh37.p13 Primary Assembly$", x = unique(subtelomere_blasts$hits_def))]
subtelomere_blasts[
grepl(pattern = "[0-9XY], GRCh37.p13 Primary Assembly$", x = hits_def)]
subtelomere_blasts <- subtelomere_blasts[
grepl(pattern = "[0-9XY], GRCh37.p13 Primary Assembly$", x = hits_def)]
gsub(pattern = , replacement = "", x = unique(subtelomere_blasts$hits_def))
unique(subtelomere_blasts$hits_def)
gsub(pattern = "^Homo sapiens chromosome ", replacement = "", x = unique(subtelomere_blasts$hits_def))
gsub(pattern = "^Homo sapiens chromosome (\\d{2}|X|Y)", replacement = "\\1", x = unique(subtelomere_blasts$hits_def))
gsub(pattern = "^Homo sapiens chromosome (\\d*[0-9XY])", replacement = "\\1", x = unique(subtelomere_blasts$hits_def))
gsub(pattern = "^Homo sapiens chromosome (\\d*[0-9XY]),", replacement = "\\1", x = unique(subtelomere_blasts$hits_def))
gsub(pattern = "^Homo sapiens chromosome (\\d*[0-9XY]), GRCh37.p13 Primary Assembly", replacement = "\\1", x = unique(subtelomere_blasts$hits_def))
subtelomere_blasts[
gsub(pattern = "(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "", x = file_name) ==
gsub(pattern = "^Homo sapiens chromosome (\\d*[0-9XY]), GRCh37.p13 Primary Assembly",
replacement = "\\1", x = hits_def)]
subtelomere_blasts[
gsub(pattern = "(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "", x = file_name) == gsub(
pattern = "^Homo sapiens chromosome (\\d*[0-9XY]), GRCh37.p13 Primary Assembly",
replacement = "\\1", x = hits_def)]
subtelomere_blasts <- aggregate_NCBI_BLAST_XMLs2DT(
dir.to.xmls = "PCAWG_Paper/data/hg19_annotations/subtelomeres_BLAST_results/",
ncores = 15)
#Only keep hits on GRCh37.p13 Primary Assembly
subtelomere_blasts <- subtelomere_blasts[
grepl(pattern = "[0-9XY], GRCh37.p13 Primary Assembly$", x = hits_def)]
#Only keep chromosome matching between file_name and hits_def
subtelomere_blasts <- subtelomere_blasts[
gsub(pattern = "(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "", x = file_name) == gsub(
pattern = "^Homo sapiens chromosome (\\d*[0-9XY]), GRCh37.p13 Primary Assembly",
replacement = "\\1", x = hits_def)]
subtelomere_blasts
subtelomere_blasts[order(score), .SD, by = "file_name"]
subtelomere_blasts[order(-score), .SD, by = "file_name"]
subtelomere_blasts[order(-score), .SD, by = "file_name"]
subtelomere_blasts[, head(.SD, n = 1), by = "file_name"]
#Keep only the 1st top hit.
subtelomere_blasts <- subtelomere_blasts[, head(.SD, n = 1), by = "file_name"]
subtelomere_blasts
#Save table of BLAST results
fwrite(x = subtelomere_blasts, file = "PCAWG_Paper/data/hg19_annotations/subtelomere_selected_BLAST_hits.csv")
telomeres
#Create subtelomeres bed annotation
telomeres
#Create subtelomeres bed annotation
telomeres$chromosomes
#Create subtelomeres bed annotation
unique(telomeres$chromosomes)
#Create subtelomeres bed annotation
chrs <- unique(telomeres$chromosomes)
chrs
paste0("chr",c(1:22,"X","Y")
)
paste0("chr", c(1:22,"X","Y"))
factor(x = chrs, levels = paste0("chr", c(1:22,"X","Y")))
sort(factor(x = chrs, levels = paste0("chr", c(1:22,"X","Y"))))
chrs <- unique(telomeres$chromosomes)
chrs <- sort(factor(x = chrs, levels = paste0("chr", c(1:22,"X","Y"))))
chrs
subtelomere_blasts
gsub(
pattern = "^Homo sapiens chromosome (\\d*[0-9XY]), GRCh37.p13 Primary Assembly",
replacement = "\\1", x = subtelomere_blasts$hits_def)
gsub(
pattern = "^Homo sapiens chromosome (\\d*[0-9XY]), GRCh37.p13 Primary Assembly",
replacement = "chr\\1", x = subtelomere_blasts$hits_def)
subtelomere_blasts[, hits_def := gsub(
pattern = "^Homo sapiens chromosome (\\d*[0-9XY]), GRCh37.p13 Primary Assembly",
replacement = "chr\\1", x = hits_def)]
subtelomere_blasts
gsub(pattern = "(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "[0-9XY](pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "[0-9XY]\\d*(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "^[0-9XY]\\d*(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "", x = subtelomere_blasts$file_name)
gsub(pattern = "^[0-9XY]\\d*(pY|*)([pq])tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "\\2", x = subtelomere_blasts$file_name)
gsub(pattern = "^[0-9XY]\\d*(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "\\8", x = subtelomere_blasts$file_name)
subtelomere_blasts[, arm := gsub(
pattern = "^[0-9XY]\\d*(pY|*)([pq])tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "\\2", x = file_name)]
subtelomere_blasts$arm
subtelomere_blasts[, extremity := gsub(
pattern = "^[0-9XY]\\d*(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "\\8", x = file_name)]
subtelomere_blasts$extremity
chrs
i = chrs[1]
i
subtelomere_blasts[hits_def == i]
subtelomere_blasts <- aggregate_NCBI_BLAST_XMLs2DT(
dir.to.xmls = "PCAWG_Paper/data/hg19_annotations/subtelomeres_BLAST_results/",
ncores = 15)
#Only keep hits on GRCh37.p13 Primary Assembly
subtelomere_blasts <- subtelomere_blasts[
grepl(pattern = "[0-9XY], GRCh37.p13 Primary Assembly$", x = hits_def)]
#Only keep chromosome matching between file_name and hits_def
subtelomere_blasts <- subtelomere_blasts[
gsub(pattern = "(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "", x = file_name) == gsub(
pattern = "^Homo sapiens chromosome (\\d*[0-9XY]), GRCh37.p13 Primary Assembly",
replacement = "\\1", x = hits_def)]
#Order rows by score of alignment
subtelomere_blasts <- subtelomere_blasts[order(-score), .SD, by = "file_name"]
subtelomere_blasts[, max(score), by = "file_name"]
subtelomere_blasts[max(score), .SD, by = "file_name"]
subtelomere_blasts[, max(.SD), by = "file_name"]
subtelomere_blasts[, .(max(score)), by = "file_name"]
subtelomere_blasts[, .SD[which.max(score)], by = "file_name"]
subtelomere_blasts[, .SD[which.max(score)], by = "file_name"]$score
subtelomere_blasts[, .SD[score == max(score)], by = "file_name"]$score
subtelomere_blasts[, .SD[score == max(score)], by = "file_name"]
subtelomere_blasts <- subtelomere_blasts[, .SD[score == max(score)], by = "file_name"]
fwrite(x = subtelomere_blasts, file = "PCAWG_Paper/data/hg19_annotations/subtelomere_selected_BLAST_hits.csv")
chrs <- unique(telomeres$chromosomes)
chrs <- sort(factor(x = chrs, levels = paste0("chr", c(1:22,"X","Y"))))
subtelomere_blasts[, chromosome := gsub(
pattern = "^Homo sapiens chromosome (\\d*[0-9XY]), GRCh37.p13 Primary Assembly",
replacement = "chr\\1", x = hits_def)]
#Get chromosome arm information
subtelomere_blasts[, arm := gsub(
pattern = "^[0-9XY]\\d*(pY|*)([pq])tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "\\2", x = file_name)]
#Get subtelomere sequence extremity
subtelomere_blasts[, extremity := gsub(
pattern = "^[0-9XY]\\d*(pY|*)[pq]tel(_short|*)_1(-|_)500[K]*(_new|shortallele|*)_[14]_(12|3)_12(v2|*)_(hg19orientation_|*)(proximal|distal)\\/1.xml$",
replacement = "\\8", x = file_name)]
i
subtelomere_blasts[chromosome == i]
subtelomere_blasts[chromosome == i]
subtelomere_blasts[chromosome == i]
subtelomere_blasts[chromosome == i & arm == "p"]
telomeres
centromeres
telomeres
subtelomere_blasts[chromosome == i & arm == "p"]
#Get subtelomere from p arm
subtelomere_blasts[chromosome == i & arm == "p", c("chromosome", "subject_start", "subject_end", "extremity")]
subtelomere_blasts[chromosome == i & arm == "q", c("chromosome", "subject_start", "subject_end", "extremity")]
subtelomere_blasts[
chromosome == i & arm == "p",]
subtelomere_blasts[
chromosome == i & arm == "q",]
telomeres
subtelomere_blasts[
chromosome == i & arm == "p",
c("chromosome", "subject_start", "subject_end", "extremity")]
sub.dt <- subtelomere_blasts[
chromosome == i & arm == "p",
c("chromosome", "subject_start", "subject_end", "extremity")]
nrow(sub.dt)
sub.dt
subtelomere_blasts[
chromosome == i & arm == "p"]
sub.dt <- subtelomere_blasts[
chromosome == i & arm == "p" & subject_frame == 1,
c("chromosome", "subject_start", "subject_end", "extremity")]
nrow(sub.dt) != 0
sub.dt
sub.dt[extremity == "distal"]
sub.dt[extremity == "distal"]$subject_start
min(sub.dt$subject_start)
telomeres
telomeres[chromosomes == i]
telomeres[chromosomes == i][1]
telomeres[chromosomes == i][1]$end
sub.dt[extremity == "proximal"]
sub.dt[extremity == "proximal"]
sub.start
if(nrow(p.dt[extremity == "distal"]) == 1){
sub.start <- p.dt[extremity == "distal"]$subject_start
} else if(nrow(p.dt[extremity == "distal"]) > 1){
sub.start <- min(p.dt$subject_start)
} else { sub.start <- telomeres[chromosomes == i][1]$end }
p.dt <- subtelomere_blasts[
chromosome == i & arm == "p" & subject_frame == 1,
c("chromosome", "subject_start", "subject_end", "extremity")]
nrow(p.dt) != 0
if(nrow(p.dt[extremity == "distal"]) == 1){
sub.start <- p.dt[extremity == "distal"]$subject_start
} else if(nrow(p.dt[extremity == "distal"]) > 1){
sub.start <- min(p.dt$subject_start)
} else { sub.start <- telomeres[chromosomes == i][1]$end }
sub.start
p.dt[extremity == "proximal"]$subject_end
521369+500000
521369+499999
sub.start
telomeres[chromosomes == i][1]$end
p.dt <- subtelomere_blasts[
chromosome == i & arm == "p" & subject_frame == 1,
c("chromosome", "subject_start", "subject_end", "extremity")]
#For distal part of the sequence
if(nrow(p.dt[extremity == "distal"]) == 1){
sub.start <- p.dt[extremity == "distal"]$subject_start
} else if(nrow(p.dt[extremity == "distal"]) > 1){
sub.start <- min(p.dt$subject_start)
} else { sub.start <- telomeres[chromosomes == i][1]$end }
#For proximal part of the sequence
if(nrow(p.dt[extremity == "proximal"]) == 1){
sub.end <- p.dt[extremity == "proximal"]$subject_end
} else if(nrow(p.dt[extremity == "proximal"]) > 1){
sub.end <- max(p.dt$subject_end)
} else { sub.end <- sub.start + 499999 }
subtelomere_blasts[chromosome == i & arm == "q"]
subtelomere_blasts[
chromosome == i & arm == "q" & subject_frame == -1,
c("chromosome", "subject_start", "subject_end", "extremity")]
q.dt <- subtelomere_blasts[
chromosome == i & arm == "q" & subject_frame == -1,
c("chromosome", "subject_start", "subject_end", "extremity")]
nrow(d.dt[extremity == "distal"]) == 1
subtelomere_blasts[arm == "q"]
subtelomere_blasts[arm == "q"]$subject_frame
subtelomere_blasts[arm == "p"]$subject_frame
q.dt[extremity == "distal"]
telomeres[chromosomes == i][2]
telomeres[chromosomes == i][2]$start - 499999
q.dt[extremity == "proximal"]
telomeres[chromosomes == i][2]
q.dt[extremity == "proximal"]
q.dt[extremity == "proximal"]
q.dt$subject_end
q.dt <- subtelomere_blasts[
chromosome == i & arm == "q" & subject_frame == -1,
c("chromosome", "subject_start", "subject_end", "extremity")]
#For distal part of the sequence
if(nrow(q.dt[extremity == "distal"]) == 1){
q.end <- q.dt[extremity == "distal"]$subject_start
} else if(nrow(q.dt[extremity == "distal"]) > 1){
q.end <- max(q.dt$subject_start)
} else { q.end <- telomeres[chromosomes == i][2]$start }
q.end
q.dt[extremity == "distal"]$subject_start
max(q.dt$subject_start)
q.dt[extremity == "proximal"]
q.end
telomeres[chromosomes == i][2]$start
q.end - 499999
p.dt <- subtelomere_blasts[
chromosome == i & arm == "p" & subject_frame == 1,
c("chromosome", "subject_start", "subject_end", "extremity")]
#For distal part of the sequence
if(nrow(p.dt[extremity == "distal"]) == 1){
p.start <- p.dt[extremity == "distal"]$subject_start
} else if(nrow(p.dt[extremity == "distal"]) > 1){
p.start <- min(p.dt[extremity == "distal"]$subject_start)
} else { p.start <- telomeres[chromosomes == i][1]$end }
#For proximal part of the sequence
if(nrow(p.dt[extremity == "proximal"]) == 1){
p.end <- p.dt[extremity == "proximal"]$subject_end
} else if(nrow(p.dt[extremity == "proximal"]) > 1){
p.end <- max(p.dt[extremity == "proximal"]$subject_end)
} else { p.end <- p.start + 499999 }
#Get subtelomere from q arm
q.dt <- subtelomere_blasts[
chromosome == i & arm == "q" & subject_frame == -1,
c("chromosome", "subject_start", "subject_end", "extremity")]
#For distal part of the sequence
if(nrow(q.dt[extremity == "distal"]) == 1){
q.end <- q.dt[extremity == "distal"]$subject_start
} else if(nrow(q.dt[extremity == "distal"]) > 1){
q.end <- max(q.dt[extremity == "distal"]$subject_start)
} else { q.end <- telomeres[chromosomes == i][2]$start }
#For proximal part of the sequence
if(nrow(q.dt[extremity == "proximal"]) == 1){
q.start <- q.dt[extremity == "proximal"]$subject_end
} else if(nrow(q.dt[extremity == "proximal"]) > 1){
q.start <- min(q.dt[extremity == "proximal"]$subject_end)
} else { q.start <- q.end - 499999 }
data.table("chromosome" = i, "start" = c(p.start, q.start), "end" = c(p.end, q.end))
subtelomere_blasts
subtelomere_blasts$chromosome
lapply(X = chrs, function(i){
#Get subtelomere from p arm
p.dt <- subtelomere_blasts[
chromosome == i & arm == "p" & subject_frame == 1,
c("chromosome", "subject_start", "subject_end", "extremity")]
#For distal part of the sequence
if(nrow(p.dt[extremity == "distal"]) == 1){
p.start <- p.dt[extremity == "distal"]$subject_start
} else if(nrow(p.dt[extremity == "distal"]) > 1){
p.start <- min(p.dt[extremity == "distal"]$subject_start)
} else { p.start <- telomeres[chromosomes == i][1]$end }
#For proximal part of the sequence
if(nrow(p.dt[extremity == "proximal"]) == 1){
p.end <- p.dt[extremity == "proximal"]$subject_end
} else if(nrow(p.dt[extremity == "proximal"]) > 1){
p.end <- max(p.dt[extremity == "proximal"]$subject_end)
} else { p.end <- p.start + 499999 }
#Get subtelomere from q arm
q.dt <- subtelomere_blasts[
chromosome == i & arm == "q" & subject_frame == -1,
c("chromosome", "subject_start", "subject_end", "extremity")]
#For distal part of the sequence
if(nrow(q.dt[extremity == "distal"]) == 1){
q.end <- q.dt[extremity == "distal"]$subject_start
} else if(nrow(q.dt[extremity == "distal"]) > 1){
q.end <- max(q.dt[extremity == "distal"]$subject_start)
} else { q.end <- telomeres[chromosomes == i][2]$start }
#For proximal part of the sequence
if(nrow(q.dt[extremity == "proximal"]) == 1){
q.start <- q.dt[extremity == "proximal"]$subject_end
} else if(nrow(q.dt[extremity == "proximal"]) > 1){
q.start <- min(q.dt[extremity == "proximal"]$subject_end)
} else { q.start <- q.end - 499999 }
#Create chromosome subtelomeres annotation
sub.dt <- data.table("chromosome" = i, "start" = c(p.start, q.start),
"end" = c(p.end, q.end))
return(sub.dt)
})
install.packages(c("ade4", "beeswarm", "BiocManager", "bslib", "cli", "colorspace", "corrplot", "cpp11", "curl", "DescTools", "devtools", "dplyr", "e1071", "fansi", "fastcluster", "fields", "formatR", "gert", "ggfortify", "ggplot2", "gtools", "htmlTable", "isoband", "KernSmooth", "MASS", "matrixStats", "mgcv", "mime", "mvtnorm", "openxlsx", "phangorn", "plotly", "proxy", "psych", "raster", "Rcpp", "RcppArmadillo", "readr", "remotes", "rmarkdown", "rootSolve", "rversions", "seqinr", "sf", "spam", "spatial", "spData", "spdep", "stringi", "survival", "testthat", "tinytex", "units", "xfun", "zip"))
warnings()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()

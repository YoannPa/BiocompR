#Remove duplicated columns
CLLE_merge <- dt.rm.dup(DT = CLLE_merge, ignore = c(
"Project_ID", "Program", "submitter_specimen_id", "submitter_sample_id"))
#Get CLLE-ES Donors from august annotation
PCAWG_CLLE <- PCAWG_Aug2016[project_code == "CLLE-ES"]
PCAWG_CLLE[, submitted_donor_id := as.integer(submitted_donor_id), ]
#Merge CLLE_merge with PCAWG_Aug2016 by submitted_donor_id
CLLE_merge <- merge(x = CLLE_merge, y = PCAWG_CLLE, by.x = "submitter_donor_id",
by.y = "submitted_donor_id", all.x = TRUE)
#Remove duplicated columns
CLLE_merge <- dt.rm.dup(DT = CLLE_merge, ignore = c(
"Project_ID", "Program", "submitter_specimen_id", "submitter_sample_id"))
#Get Methylation Data for all donors of CLLE-ES
meth_info <- fread("metadata/ICGC/ICGC_Array_IDs/ICGC_CLLE-ES_ids.csv")
#Merge CLLE_merge with ICGC_specimen
CLLE_merge <- merge(
x = CLLE_merge, y = ICGC_specimens[project_code == "CLLE-ES"][
icgc_specimen_id %in% meth_info$icgc_specimen_id], by = "icgc_donor_id",
all.x = TRUE)
#Remove duplicated columns
CLLE_merge <- dt.rm.dup(DT = CLLE_merge, ignore = c(
"Project_ID", "Program", "submitter_specimen_id", "submitter_sample_id"))
#Check if any sample or specimen is duplicated in the table
if(any(duplicated(meth_info$icgc_sample_id)) &
any(duplicated(meth_info$icgc_specimen_id))){
warning("Some Samples or Specimens have multiple occurences in the table! Cannot associate 1 sample to 1 specimen.")
} else {
#Check if any Specimen ID has multiple occurence in OV_merge table
CLL_spec <- CLLE_merge$icgc_specimen_id[!is.na(CLLE_merge$icgc_specimen_id)]
CLL_duplic_spec <- CLL_spec[duplicated(CLL_spec)]
if(length(CLL_duplic_spec) != 0){
warning("Multiple ocurrence of the same specimen IDs found in the OV_merge table! Removing the problematic specimen IDs from the meth_info table...")
meth_info <- meth_info[!icgc_specimen_id %in% CLL_duplic_spec]
}
CLLE_merge <- merge(
x = CLLE_merge, y = meth_info, by = "icgc_specimen_id", all.x = TRUE)
}
#Remove duplicated columns
CLLE_merge <- dt.rm.dup(DT = CLLE_merge, ignore = c(
"Project_ID", "Program", "submitter_specimen_id", "submitter_sample_id"))
#Merge CLLE_merge with ICGC_samples
CLLE_merge <- merge(x = CLLE_merge, y = ICGC_samples[project_code == "CLLE-ES"],
by = "icgc_sample_id", all.x = TRUE)
#Remove duplicated columns
CLLE_merge <- dt.rm.dup(DT = CLLE_merge, ignore = c(
"Project_ID", "Program", "submitter_specimen_id", "submitter_sample_id",
"submitted_sample_id"))
CLLE_merge <- CLLE_merge[order(icgc_sample_id)] #Put ICGC Sample IDs at the top
#Clean and Format CLLE_merge to fit the Final Annotation
#TODO: ADD donor survival time, Add some new columns.
CLLE_merge <- CLLE_merge[, .(
ICGC_Sample_ID = icgc_sample_id, TCGA_Sample_ID = NA,
Submitted_Sample_ID =
paste(submitter_sample_id, submitted_sample_id, sep = " / "),
ICGC_Registered_Specimen_ID = icgc_specimen_id.x, Submitted_Specimen_ID =
paste(submitter_specimen_id, submitted_specimen_id.x, sep = " / "),
Specimen_Type = paste(dcc_specimen_type, specimen_type, sep = " / "),
Specimen_Processing = specimen_processing, Specimen_Storage =
paste(specimen_storage, specimen_storage_other, sep = " / "),
ICGC_Donor_ID = icgc_donor_id.x, TCGA_Donor_ID = NA, TCGA_Donor_UUID = NA,
Donor_Treatment = specimen_donor_treatment_type, Sentrix_Barcode = barcode,
Sentrix_ID = as.character(Sentrix_ID.x), Sentrix_Position=Sentrix_Position.x,
Tumor_Confirmed = tumour_confirmed,
Tumor_Histological_Type = tumour_histological_type,
Analyzed_Sample_Interval = analyzed_sample_interval,
Analyzed_Specimen_Interval = specimen_interval,
Percentage_Cellularity = percentage_cellularity,
Level_of_Cellularity = NA, Study_Abbreviation,
Project_Name = "Chronic Lymphocytic Leukemia", Disease_Type = NA, Cohort,
Project_ID = NA, Program = NA, ICGC_Study = "PCAWG"),]
#Remove NAs concatenated in strings
dt.sub(DT = CLLE_merge, pattern = "(\\s/\\sNA)|(NA\\s/\\s)|(NA\\s/\\sNA)",
replacement = "")
#Replace all blanks by NAs if some
dt.sub(DT = CLLE_merge, pattern = "^$", replacement = NA)
#Check if all CLLE-ES samples are in CLLE_merge
if(all(annotation_main[Cohort == "CLLE-ES"]$barcode %in%
CLLE_merge$Sentrix_Barcode)){
#Rbind Final table with OV_merge
Final.table <- rbind(Final.table, CLLE_merge)
} else {
stop("Some Sentrix_Barcodes are missing in CLLE_merge table.")
}
#Order the Final table
Final.table <- Final.table[order(
Cohort, ICGC_Donor_ID, ICGC_Registered_Specimen_ID, ICGC_Sample_ID)]
##Load LIRI metadata ###########################################################
LIRI_meta <- fread(
"metadata/DKFZ_Applied_Bioinformatics_Division/LIRI_JP_Riken_450K_151028_deposit_sample106.meta_data.txt",
na.strings = "")
#There are some naming inconsistencies between submitter_donor_id,
# submitter_specimen_id and submitter_sample_id
#Check which submitter_donor_id namings are different from submitter_specimen_id roots
LIRI_meta[, subspec := gsub(
pattern = "_.+$", replacement = "", x = submitter_specimen_id)]
if(nrow(LIRI_meta[submitter_donor_id != subspec]) != 0){
warning("Naming inconsistencied between 'submitter_donor_id', 'submitter_specimen_id' and 'submitter_sample_id' found! ")
}
#TODO : Check why donors RK036 & RK204 have samples IDs RK189_C01 & RK209_C01
#LIRI-JP Metadata look strange for 3 donors "RK233", "RK036", "RK204",
# especially for donor RK036 because the Sentrix_IDs do not match between the
# associated samples.
#Create Sentrix barcode column
LIRI_meta[, Sentrix_Barcode := paste(
`Sentrix ID`, `Sentrix position`, sep = "_")]
#Merge annotation main with LIRI-meta by Sentrix Barcode
LIRI_merge <- merge(x = annotation_main[Cohort == "LIRI-JP"], y = LIRI_meta,
by.x = "barcode", by.y = "Sentrix_Barcode", all.x = TRUE)
#Remove duplicated columns
LIRI_merge <- dt.rm.dup(DT = LIRI_merge, ignore = c(
"Project_ID", "Program", "submitter_sample_id"))
PCAWG_LIRI <- PCAWG_Aug2016[project_code == "LIRI-JP"]
#Merge LIRI_merge with PCAWG_Aug2016 by submitted_donor_id
LIRI_merge <- merge(x = LIRI_merge, y = PCAWG_LIRI, by.x = "submitter_donor_id",
by.y = "submitted_donor_id", all.x = TRUE)
#Remove duplicated columns
LIRI_merge <- dt.rm.dup(DT = LIRI_merge, ignore = c(
"Project_ID", "Program", "submitter_sample_id"))
#4 submitted donors ids have no matches in PCAWG_Aug2016 icgc_donor_ids :
# RK039, RK179, RK182 and RK240
#Complete missing ICGC donor IDs: merge LIRI_merge with ICGC_donor
LIRI_merge <- merge(
x = LIRI_merge, y = ICGC_donors[project_code == "LIRI-JP"],
by.x = "submitter_donor_id", by.y = "submitted_donor_id", all.x = TRUE)
#Remove duplicated columns
LIRI_merge <- dt.rm.dup(DT = LIRI_merge, ignore = c(
"Project_ID", "Program", "submitter_sample_id"))
#Combine incomplete duplicated columns
LIRI_merge <- dt.combine(DT = LIRI_merge)
LIRI_merge
LIRI_merge$submitter_donor_id
test <- merge(x = LIRI_merge, y = ICGC_specimens[
project_code == "LIRI-JP" & submitted_specimen_id %in%
LIRI_merge$submitter_specimen_id], by.x = "submitter_specimen_id",
by.y = "submitted_specimen_id", all.x = TRUE)
test[submitted_donor_id != submitter_donor_id]
LIRI_merge
LIRI_merge <- merge(x = LIRI_merge, y = ICGC_specimens[
project_code == "LIRI-JP" & submitted_specimen_id %in%
LIRI_merge$submitter_specimen_id], by.x = "submitter_specimen_id",
by.y = "submitted_specimen_id", all.x = TRUE)
LIRI_merge[submitted_donor_id != submitter_donor_id]
LIRI_merge
colnames(LIRI_merge)
dt.combine(DT = LIRI_merge, col1 = "submitter_donor_id", col2 = "submitted_donor_id", keep.colname = 2)
LIRI_merge[submitted_donor_id != submitter_donor_id]
LIRI_merge[submitted_donor_id != submitter_donor_id, submitter_donor_id := NA]
LIRI_merge[submitted_donor_id != submitter_donor_id]
dt.combine(DT = LIRI_merge, col1 = "submitter_donor_id",
col2 = "submitted_donor_id", keep.colname = 2)
LIRI_merge <- dt.combine(DT = LIRI_merge, col1 = "submitter_donor_id",
col2 = "submitted_donor_id", keep.colname = 2)
LIRI_merge
LIRI_merge$submitted_donor_id
dim(LIRI_merge)
dim(dt.rm.dup(DT = LIRI_merge, ignore = c(
"Project_ID", "Program", "submitter_sample_id")))
LIRI_merge <- dt.rm.dup(DT = LIRI_merge, ignore = c(
"Project_ID", "Program", "submitter_sample_id"))
LIRI_merge$icgc_specimen_id[!is.na(LIRI_merge$icgc_specimen_id)]
LIRI_spec <- LIRI_merge$icgc_specimen_id[!is.na(LIRI_merge$icgc_specimen_id)]
LIRI_spec[duplicated(LIRI_spec)]
LIRI_duplic_spec <- LIRI_spec[duplicated(LIRI_spec)]
length(LIRI_duplic_spec) != 0
if(length(LIRI_duplic_spec) != 0){ stop("Duplicated specimen IDs ocurrence!") }
LIRI_merge
LIRI_merge
colnames(LIRI_merge)
LIRI_meta <- fread(
"metadata/DKFZ_Applied_Bioinformatics_Division/LIRI_JP_Riken_450K_151028_deposit_sample106.meta_data.txt",
na.strings = "")
#There are some naming inconsistencies between submitter_donor_id,
# submitter_specimen_id and submitter_sample_id
#Check which submitter_donor_id namings are different from submitter_specimen_id roots
LIRI_meta[, subspec := gsub(
pattern = "_.+$", replacement = "", x = submitter_specimen_id)]
if(nrow(LIRI_meta[submitter_donor_id != subspec]) != 0){
warning("Naming inconsistencied between 'submitter_donor_id', 'submitter_specimen_id' and 'submitter_sample_id' found! ")
}
#TODO : Check why donors RK036 & RK204 have samples IDs RK189_C01 & RK209_C01
#LIRI-JP Metadata look strange for 3 donors "RK233", "RK036", "RK204",
# especially for donor RK036 because the Sentrix_IDs do not match between the
# associated samples.
#Create Sentrix barcode column
LIRI_meta[, Sentrix_Barcode := paste(
`Sentrix ID`, `Sentrix position`, sep = "_")]
#Merge annotation main with LIRI-meta by Sentrix Barcode
LIRI_merge <- merge(x = annotation_main[Cohort == "LIRI-JP"], y = LIRI_meta,
by.x = "barcode", by.y = "Sentrix_Barcode", all.x = TRUE)
#Remove duplicated columns
LIRI_merge <- dt.rm.dup(DT = LIRI_merge, ignore = c(
"Project_ID", "Program", "submitter_sample_id"))
PCAWG_LIRI <- PCAWG_Aug2016[project_code == "LIRI-JP"]
#Merge LIRI_merge with PCAWG_Aug2016 by submitted_donor_id
LIRI_merge <- merge(x = LIRI_merge, y = PCAWG_LIRI, by.x = "submitter_donor_id",
by.y = "submitted_donor_id", all.x = TRUE)
#Remove duplicated columns
LIRI_merge <- dt.rm.dup(DT = LIRI_merge, ignore = c(
"Project_ID", "Program", "submitter_sample_id"))
#4 submitted donors ids have no matches in PCAWG_Aug2016 icgc_donor_ids :
# RK039, RK179, RK182 and RK240
#Complete missing ICGC donor IDs: merge LIRI_merge with ICGC_donor
LIRI_merge <- merge(
x = LIRI_merge, y = ICGC_donors[project_code == "LIRI-JP"],
by.x = "submitter_donor_id", by.y = "submitted_donor_id", all.x = TRUE)
#Remove duplicated columns
LIRI_merge <- dt.rm.dup(DT = LIRI_merge, ignore = c(
"Project_ID", "Program", "submitter_sample_id"))
#Combine incomplete duplicated columns
LIRI_merge <- dt.combine(DT = LIRI_merge)
#TODO: Continue Here !!
#Merge LIRI_merge with ICGC_specimen
LIRI_merge <- merge(x = LIRI_merge, y = ICGC_specimens[
project_code == "LIRI-JP" & submitted_specimen_id %in%
LIRI_merge$submitter_specimen_id], by.x = "submitter_specimen_id",
by.y = "submitted_specimen_id", all.x = TRUE)
if(nrow(LIRI_merge[submitted_donor_id != submitter_donor_id]) != 0 ){
warning("Some specimens have different submitted donor IDs ! Keeping submitted donor IDs from ICGC data portal.")
# 2 specimens (RK179 & RK240) have different submitted donor IDs !
LIRI_merge[submitted_donor_id != submitter_donor_id, submitter_donor_id := NA]
LIRI_merge <- dt.combine(DT = LIRI_merge, col1 = "submitter_donor_id",
col2 = "submitted_donor_id", keep.colname = 2)
}
dim(LIRI_merge)
dim(dt.combine(DT = LIRI_merge))
dt.combine(DT = LIRI_merge)
colnames(dt.combine(DT = LIRI_merge))
LIRI_merge <- dt.combine(DT = LIRI_merge)
#Remove duplicated columns
LIRI_merge <- dt.rm.dup(DT = LIRI_merge, ignore = c(
"Project_ID", "Program", "submitter_sample_id"))
LIRI_spec <- LIRI_merge$icgc_specimen_id[!is.na(LIRI_merge$icgc_specimen_id)]
LIRI_duplic_spec <- LIRI_spec[duplicated(LIRI_spec)]
if(length(LIRI_duplic_spec) != 0){ stop("Duplicated specimen IDs ocurrence!") }
LIRI_merge$icgc_donor_id
LIRI_merge[!is.na(icgc_donor_id), ICGC_Sample_ID := "UNREGISTRED"]
LIRI_merge$dcc_specimen_type
colnames(LIRI_merge)
LIRI_merge$dcc_specimen_type
LIRI_merge$specimen_storage
LIRI_merge$icgc_donor_id
LIRI_merge$Study_Abbreviation
LIRI_merge[, .(
ICGC_Sample_ID, TCGA_Sample_ID = NA,
Submitted_Sample_ID = submitter_sample_id,
ICGC_Registered_Specimen_ID = icgc_specimen_id,
Submitted_Specimen_ID = submitter_specimen_id,
Specimen_Type = dcc_specimen_type, Specimen_Processing = specimen_processing,
Specimen_Storage = specimen_storage, ICGC_Donor_ID = icgc_donor_id,
TCGA_Donor_ID = NA, TCGA_Donor_UUID = NA,
Donor_Treatment = paste(specimen_donor_treatment_type,
specimen_donor_treatment_type_other, sep = " / "),
Sentrix_Barcode = barcode, Sentrix_ID = as.character(Sentrix_ID),
Sentrix_Position = Sentrix_Position, Tumor_Confirmed = tumour_confirmed,
Tumor_Histological_Type = tumour_histological_type,
Analyzed_Sample_Interval = NA, Analyzed_Specimen_Interval = NA,
Percentage_Cellularity = percentage_cellularity, Level_of_Cellularity = NA,
Study_Abbreviation, Project_Name = "Liver Cancer - RIKEN",
Disease_Type = "Hepatocellular carcinoma (Virus associated)", Cohort,
Project_ID = NA, Program = NA, ICGC_Study = "PCAWG"), ]
LIRI_merge <- LIRI_merge[, .(
ICGC_Sample_ID, TCGA_Sample_ID = NA,
Submitted_Sample_ID = submitter_sample_id,
ICGC_Registered_Specimen_ID = icgc_specimen_id,
Submitted_Specimen_ID = submitter_specimen_id,
Specimen_Type = dcc_specimen_type, Specimen_Processing = specimen_processing,
Specimen_Storage = specimen_storage, ICGC_Donor_ID = icgc_donor_id,
TCGA_Donor_ID = NA, TCGA_Donor_UUID = NA,
Donor_Treatment = paste(specimen_donor_treatment_type,
specimen_donor_treatment_type_other, sep = " / "),
Sentrix_Barcode = barcode, Sentrix_ID = as.character(Sentrix_ID),
Sentrix_Position = Sentrix_Position, Tumor_Confirmed = tumour_confirmed,
Tumor_Histological_Type = tumour_histological_type,
Analyzed_Sample_Interval = NA, Analyzed_Specimen_Interval = NA,
Percentage_Cellularity = percentage_cellularity, Level_of_Cellularity = NA,
Study_Abbreviation, Project_Name = "Liver Cancer - RIKEN",
Disease_Type = "Hepatocellular carcinoma (Virus associated)", Cohort,
Project_ID = NA, Program = NA, ICGC_Study = "PCAWG"), ]
LIRI_merge$Donor_Treatment
LIRI_merge[, Donor_Treatment := gsub(
pattern = "(\\s/\\sNA)|(NA\\s/\\s)|(NA\\s/\\sNA)", replacement = "",
x = Donor_Treatment), ]
LIRI_merge$Donor_Treatment
LIRI_merge[, Donor_Treatment := gsub(
pattern = "^$", replacement = NA, x = Donor_Treatment), ]
all(annotation_main[Cohort == "LIRI-JP"]$barcode %in%
LIRI_merge$Sentrix_Barcode)
Final.table <- rbind(Final.table, LIRI_merge)
Final.table <- Final.table[order(
Cohort, ICGC_Donor_ID, ICGC_Registered_Specimen_ID, ICGC_Sample_ID)]
PACA_meta <- fread(
"metadata/DKFZ_Applied_Bioinformatics_Division/PACA_AU_Meta.csv")
ls.strx <- strsplit(x = filenames, split = ".txt.gz")
PACA_meta <- PACA_meta[Methylation_Array %in% ls.strx]
PACA_meta <- PACA_meta[, .(
Sample_ID, Patient_ID = `Patient ID`, Sentrix_Barcode = Methylation_Array,
Sentrix_ID = sapply(strsplit(x = Methylation_Array, split = "_"), `[[`, 1),
Sentrix_Position = sapply(strsplit(x = Methylation_Array, split="_"),`[[`,2),
Sample, Center, Batch, Cellularity, Age, Gender, Smoking,
Tumor_grade = `Tumor grade`)]
PACA_meta
annotation_main[Cohort == "PACA-AU"]
PACA_merge <- merge(x = annotation_main[Cohort == "PACA-AU"], y = PACA_meta,
by.x = "barcode", by.y = "Sentrix_Barcode", all.x = TRUE)
dt.sub(DT = PACA_merge, pattern = "#N/A", replacement = NA)
PACA_merge[lapply(X = Disease_Type, FUN = is.null) == TRUE]
PACA_merge[lapply(X = Disease_Type, FUN = is.null) == TRUE,
Disease_Type := list(NA), ]
dt.ls2c(DT = PACA_merge, column.names = "Disease_Type")
PACA_merge <- dt.rm.dup(DT = PACA_merge, ignore = c("Project_ID", "Program"))
#Check if some columns contain only NAs
invisible(allNA.col(data = PACA_merge))
dt.int64tochar(DT = PACA_merge, column.names = "Sentrix_ID.x")
PACA_merge <- dt.combine(DT = PACA_merge)
PCAWG_PACA <- PCAWG_Aug2016[project_code == "PACA-AU"]
#Merge PACA_merge with PCAWG_Aug2016 by submitted_donor_id
PACA_merge<-merge(x = PACA_merge, y = PCAWG_PACA, by.x = "Patient_ID",
by.y = "submitted_donor_id", all.x = TRUE)
#Remove duplicated columns
PACA_merge <- dt.rm.dup(DT = PACA_merge, ignore = c("Project_ID", "Program"))
#Get Methylation Data for all donors of PACA-AU
meth_info <- fread("metadata/ICGC/ICGC_Array_IDs/ICGC_PACA-AU_ids.csv")
#Remove duplicated columns
PACA_merge <- dt.rm.dup(DT = PACA_merge, ignore = c("Project_ID", "Program"))
#Merge PACA_merge with ICGC_specimen
PACA_merge <- merge(
x = PACA_merge, y = ICGC_specimens[project_code == "PACA-AU"][
icgc_specimen_id %in% meth_info$icgc_specimen_id],
by = "icgc_donor_id", all.x = TRUE)
#Check duplicated barcode appearing after merging on donors
DT.PACA.dup.barcodes <- PACA_merge[!is.na(icgc_donor_id)][
duplicated(barcode) | duplicated(barcode, fromLast = TRUE)]
#Remove
PACA.dup.barcodes <- DT.PACA.dup.barcodes$barcode
#Use tumor_grade and Cellularity percentage to associate barcodes with
# corresponding specimen
DT.PACA.dup.barcodes <- DT.PACA.dup.barcodes[Tumor_grade == tumour_grade][
Cellularity == percentage_cellularity]
#TODO: Some cellularity values are extremely close between internal annotation
# and ICGC annotation, but yet different. Compare methylation values of public
# HM450K with internal HM450K data.
# PACA.dup.barcodes[Tumor_grade == tumour_grade][,c(
#   "icgc_donor_id","Cellularity", "percentage_cellularity", "icgc_specimen_id"),]
#Set to NA values from icgc specimen table for duplicated barcodes
PACA_merge[barcode %in% PACA.dup.barcodes, (names(ICGC_specimens)[
!names(ICGC_specimens) %in% c("icgc_donor_id","project_code")]) := NA]
#Unique duplicated rows to bring back the table from 105 rows to 96.
dt.ls2c(DT = PACA_merge, column.names = c("Sentrix_ID", "Sentrix_Position"))
PACA_merge <- unique(PACA_merge)
#Remove rows appearing in DT.PACA.dup.barcodes
PACA_merge <- PACA_merge[!barcode %in% DT.PACA.dup.barcodes$barcode]
#Add complete rows from DT.PACA.dup.barcodes
PACA_merge <- rbind(PACA_merge, DT.PACA.dup.barcodes)
dt.ls2c(DT = PACA_merge, column.names = c("Sentrix_ID", "Sentrix_Position"))
PACA_merge <- dt.rm.dup(DT = PACA_merge, ignore = c("Project_ID", "Program"))
#Merge PACA with info from methylation data
PACA_merge <- merge(
x = PACA_merge, y = meth_info, by = "icgc_specimen_id", all.x = TRUE)
#Merge PACA_merge with ICGC_samples
PACA_merge <- merge(x = PACA_merge, y = ICGC_samples[project_code == "PACA-AU"],
by = "icgc_sample_id", all.x = TRUE)
PACA_merge <- dt.rm.dup(DT = PACA_merge, ignore = c("Project_ID", "Program"))
PACA_merge <- dt.combine(DT = PACA_merge)
PACA_merge <- PACA_merge[order(icgc_sample_id)] #Put ICGC Sample IDs at the top
#Clean and Format PACA_merge to fit the Final Annotation
#TODO: ADD donor survival time, Add some new columns.
PACA_merge<-PACA_merge[, .(
ICGC_Sample_ID = icgc_sample_id, TCGA_Sample_ID = NA,
Submitted_Sample_ID = paste(Sample_ID, Alternative_ID, sep = " / "),
ICGC_Registered_Specimen_ID = icgc_specimen_id.x,
Submitted_Specimen_ID = submitted_specimen_id.x, Specimen_Type=specimen_type,
Specimen_Processing = specimen_processing, Specimen_Storage=specimen_storage,
ICGC_Donor_ID = icgc_donor_id, TCGA_Donor_ID = NA, TCGA_Donor_UUID = NA,
Donor_Treatment = specimen_donor_treatment_type, Sentrix_Barcode = barcode,
Sentrix_ID = Sentrix_ID, Sentrix_Position = Sentrix_Position,
Tumor_Confirmed = tumour_confirmed,
Tumor_Histological_Type = tumour_histological_type,
Analyzed_Sample_Interval = NA, Analyzed_Specimen_Interval = specimen_interval,
Percentage_Cellularity = paste(
"Brors Lab Annotation:", Cellularity, "/", "ICGC Portal Annotation:",
percentage_cellularity.x),
Level_of_Cellularity = level_of_cellularity.x, Study_Abbreviation,
Project_Name = "Pancreatic Cancer", Disease_Type = NA,
Cohort, Project_ID = NA, Program = NA, ICGC_Study="PCAWG"),]
#Remove NAs concatenated in strings
dt.sub(DT = PACA_merge, pattern = "(\\s/\\sNA)|(NA\\s/\\s)|(NA\\s/\\sNA)",
replacement = "")
dt.sub(DT = PACA_merge,
pattern = "Brors Lab Annotation: ICGC Portal Annotation: NA",
replacement = "")
#Replace all blanks by NAs if some
dt.sub(DT = PACA_merge, pattern = "^$", replacement = NA)
if(all(annotation_main[Cohort == "PACA-AU"]$barcode %in%
PACA_merge$Sentrix_Barcode)){
#Rbind Final table with OV_merge
Final.table <- rbind(Final.table, PACA_merge)
} else {
stop("Some Sentrix_Barcodes are missing in PACA_merge table.")
}
#Order the Final table
Final.table <- Final.table[order(
Cohort, ICGC_Donor_ID, ICGC_Registered_Specimen_ID, ICGC_Sample_ID)]
PBCA_meta <- fread(
file = "metadata/DKFZ_Applied_Bioinformatics_Division/PBCA_DE_ICGC_PBCA-DE_450K.20141024.metadata.tsv")
#Create Sentrix barcode column
PBCA_meta[, Sentrix_Barcode := .(paste(
`Sentrix ID`, `Sentrix position`, sep="_"))]
#Merge annotation main with CLLE-meta by Sentrix Barcode
PBCA_merge <- merge(x = annotation_main[Cohort == "PBCA-DE"], y = PBCA_meta,
by.x = "barcode", by.y = "Sentrix_Barcode", all.x = TRUE)
#Remove duplicated columns
PBCA_merge <- dt.rm.dup(DT = PBCA_merge, ignore = c(
"Project_ID", "Program", "submitter_specimen_id", "submitter_sample_id"))
PCAWG_PBCA <- PCAWG_Aug2016[project_code == "PBCA-DE"]
#Merge PBCA_merge with PCAWG_Aug2016 by submitted_donor_id
PBCA_merge <- merge(x = PBCA_merge, y = PCAWG_PBCA, by.x = "submitter_donor_id",
by.y = "submitted_donor_id", all.x = TRUE)
#Remove duplicated columns
PBCA_merge <- dt.rm.dup(DT = PBCA_merge, ignore = c(
"Project_ID", "Program", "submitter_specimen_id", "submitter_sample_id"))
#Merge PBCA_merge with ICGC_samples
PBCA_merge <- merge(x = PBCA_merge, y = ICGC_samples[project_code == "PBCA-DE"],
by.x = "submitter_sample_id", by.y = "submitted_sample_id",
all.x = TRUE)
#Remove duplicated columns
PBCA_merge <- dt.rm.dup(DT = PBCA_merge, ignore = c(
"Project_ID", "Program", "submitter_specimen_id", "submitter_sample_id"))
#Merge PBCA_merge with ICGC_specimens
PBCA_merge <- merge(x = PBCA_merge, y = ICGC_specimens[
project_code == "PBCA-DE"], by = "icgc_specimen_id", all.x = TRUE)
#Remove duplicated columns
PBCA_merge <- dt.rm.dup(DT = PBCA_merge, ignore = c(
"Project_ID", "Program", "submitter_specimen_id", "submitter_sample_id"))
PBCA_merge <- PBCA_merge[order(icgc_sample_id)] #Put ICGC Sample IDs at the top
#Clean and Format PBCA_merge to fit the Final Annotation
#TODO: ADD donor survival time, Add some new columns.
PBCA_merge<-PBCA_merge[, .(
ICGC_Sample_ID = icgc_sample_id, TCGA_Sample_ID = NA,
Submitted_Sample_ID = submitter_sample_id,
ICGC_Registered_Specimen_ID = icgc_specimen_id,
Submitted_Specimen_ID = submitter_specimen_id,
Specimen_Type = dcc_specimen_type, Specimen_Processing = specimen_processing,
Specimen_Storage = specimen_storage, ICGC_Donor_ID = icgc_donor_id.x,
TCGA_Donor_ID = NA, TCGA_Donor_UUID = NA,
Donor_Treatment = specimen_donor_treatment_type, Sentrix_Barcode = barcode,
Sentrix_ID = as.character(Sentrix_ID), Sentrix_Position = Sentrix_Position,
Tumor_Confirmed = tumour_confirmed,
Tumor_Histological_Type = tumour_histological_type,
Analyzed_Sample_Interval = NA, Analyzed_Specimen_Interval = NA,
Percentage_Cellularity = NA, Level_of_Cellularity = NA, Study_Abbreviation,
Project_Name = "Pediatric Brain Cancer",
Disease_Type = NA, Cohort, Project_ID = NA, Program=NA, ICGC_Study="PCAWG"),]
#Check if all PBCA-DE samples are in PBCA_merge
if(all(annotation_main[Cohort == "PBCA-DE"]$barcode %in%
PBCA_merge$Sentrix_Barcode)){
#Rbind Final table with OV_merge
Final.table <- rbind(Final.table, PBCA_merge)
} else {
stop("Some Sentrix_Barcodes are missing in CLLE_merge table.")
}
Final.table <- Final.table[order(Cohort, ICGC_Donor_ID,
ICGC_Registered_Specimen_ID, ICGC_Sample_ID)]
Final.table[, c(1:9, 28, 10:27),]
Final.table <- Final.table[, c(1:9, 28, 10:27),]
test <-fread("PCAWG4_ICGC_TCGA.csv")
all.equal(target = test, current = Final.table)
dim(test)
dim(Final.table)
fwrite(x = Final.table, na = "NA", file = "PCAWG4_ICGC_TCGA.csv")
total.samples <- Final.table[, c("ICGC_Sample_ID", "Cohort"),][, .N,
by = Cohort]
ICGC.samples <- Final.table[,c(
"ICGC_Sample_ID", "ICGC_Registered_Specimen_ID", "Cohort"),
][!is.na(ICGC_Registered_Specimen_ID)][, .N, by = Cohort]
cov.smpl.tbl <- merge(x = total.samples, y = ICGC.samples, by = "Cohort",
all.x = TRUE)
cov.smpl.tbl <- merge(x = unique(Final.table[,"Cohort",]), y = cov.smpl.tbl,
by = "Cohort", all.x = TRUE)
#Plot Coverage of Samples Referenced in ICGC PCAWG Study
ggcoverage(data = cov.smpl.tbl, rev.stack = TRUE,
invert.percent = TRUE, round.unit = 0) +
theme(axis.text.x = element_text(size = 11, color = "black", angle = -45,
hjust = 0, face = "bold"),
axis.text.y = element_text(size = 13, color = "black"),
axis.title = element_text(size = 14),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
legend.position = "bottom", legend.direction="horizontal",
panel.background = element_blank(),panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey"),
plot.margin = unit(c(0.1,1,0,0.1),"cm")) +
scale_fill_manual(
values=c("#D6604D","#4393C3"),
label = c("No Specimen Referenced in ICGC",
"Specimen Referenced in ICGC")) +
guides(fill=guide_legend(title="HM450K Samples")) +
ylab(label = "Number of Samples") +
xlab(label = "HM450K Matching Specimen in ICGC - PCAWG Study") +
scale_y_continuous(expand = c(0,0),
limits = c(0,max(cov.smpl.tbl$N.x, na.rm = TRUE) +
0.1*max(cov.smpl.tbl$N.x, na.rm = TRUE)))
?ggcoverage
ggcoverage
getwd()
ggsave(filename = "Barplot_HM450K_Samples_in_ICGC_PCAWG_Study.png",
device = "png", path = "graphs/", width = 30, height = 19, units = "cm")
devtools::document()
devtools::install()
devtools::document()
devtools::install()

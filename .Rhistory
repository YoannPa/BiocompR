dummy.complete = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
"Function(2ndVar)" = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),each=100),6))
dummy.complete.bis = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)))
dummy.minimal = data.frame(
Samples = rep(paste0("Sample",c(1:2)),each = 1000),
Values=c(rnorm(1000,0), rnorm(1000, 0.5)))
BiocompR::ggcraviola(data = dummy.complete)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black")
BiocompR::ggcraviola(data = dummy.complete.bis, bins = TRUE, lines.col = "black")
BiocompR::ggcraviola(data = dummy.minimal, bins = TRUE, lines.col = "black")
BiocompR::ggcraviola(data = dummy.minimal, bins = TRUE, lines.col = "black")
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black")
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.5)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.2)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 0.2)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 0.5)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.1)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.5)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.4)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.3)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.2)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.2)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.1)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.1)
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.1, bin.fun = "mean")
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.1, bin.fun = "mad")
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.1, bin.fun = "sd")
BiocompR::ggcraviola(data = dummy.complete, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.1, bins.quantiles = c(0.3,0.5,0.7))
ggcraviola(data = dummy, bins = TRUE, lines.col = "black", craviola.width = 1.3, boxplot.width = 0.1, bins.quantiles = c(0.3,0.5,0.7))
df.complete = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
"Function(2ndVar)" = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),each=100),6))
df.complete2 = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)))
df.minimal = data.frame(
Samples = rep(paste0("Sample",c(1:2)),each = 1000),
Values=c(rnorm(1000,0), rnorm(1000, 0.5)))
ggcraviola(data = df.minimal)
ggcraviola(data = df.minimal, lines.col = "black")
ggcraviola(data = df.minimal, lines.col = "black", craviola.width = 0.5)
ggcraviola(data = df.minimal, lines.col = "black", craviola.width = 0.4)
ggcraviola(data = df.minimal, lines.col = "black", craviola.width = 0.2)
ggcraviola(data = df.minimal, lines.col = "black", craviola.width = 0.3)
ggcraviola(data = df.minimal, lines.col = "black")
df.complete2 = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
"Function(2ndVar)" = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),each=100),6))
df.complete = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)))
df.minimal = data.frame(
Samples = rep(paste0("Sample",c(1:2)),each = 1000),
Values=c(rnorm(1000,0), rnorm(1000, 0.5)))
ggcraviola(data = df.complete, lines.col = "black")
devtools::document()
devtools::install()
df.complete2 = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
"Function(2ndVar)" = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),each=100),6))
df.complete = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)))
df.minimal = data.frame(
Samples = rep(paste0("Sample",c(1:2)),each = 1000),
Values=c(rnorm(1000,0), rnorm(1000, 0.5)))
library(BiocompR)
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
scale_alpha(name = "SD(2nd var.)")
seq(13,18,length.out = 5)
as.integer(seq(13,18,length.out = 5))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
scale_alpha(name = "SD(2nd var.)",
breaks = as.integer(seq(13,18,length.out = 5)))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
scale_alpha(name = "SD(2nd var.)",
breaks = as.integer(seq(13,18,length.out = 5)))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
scale_alpha(name = "SD(2nd var.)",
breaks = as.integer(seq(13,18,length.out = 5)))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
scale_alpha(name = "SD(2nd var.)",
breaks = as.integer(seq(13,18,length.out = 5)))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
scale_alpha(name = "SD(2nd var.)",
breaks = as.integer(seq(12,19,length.out = 5)))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
scale_alpha(name = "SD(2nd var.)",
breaks = seq(12,19,length.out = 5))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
scale_alpha(name = "SD(2nd var.)")
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
scale_alpha(name = "SD(2nd var.)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_line(color = "white"),
panel.grid.minor.x = element_line(color = "white"),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "COUCOU") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_line(color = "white"),
panel.grid.minor.x = element_line(color = "white"),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0))
df.complete2 = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
"2ndVar" = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),each=100),6))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)
df.complete2 = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
"Scnd.Var" = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),each=100),6))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(My Additional\nVariable)")
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_line(color = "white"),
panel.grid.minor.x = element_line(color = "white"),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_line(color = "white"),
panel.grid.minor.x = element_line(color = "white"),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_line(color = "white"),
panel.grid.minor.x = element_line(color = "white"),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_line(color = "white"),
panel.grid.minor.x = element_line(color = "white"),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("steelblue","darkorange"))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("steelblue","darkorange"))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("steelblue2","darkorange2"))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("steelblue2","darkorange4"))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("steelblue4","darkorange4"))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("steelblue","darkorange"))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("dodgerblue","darkorange"))
devtools::document()
devtools::install()
library(BiocompR)
df.minimal = data.frame(
Samples = rep(paste0("Sample",c(1:2)),each = 1000),
Values=c(rnorm(1000,0), rnorm(1000, 0.5)))
ggcraviola(data = df.minimal, lines.col = "black")
df.complete = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)))
ggcraviola(data = df.complete, lines.col = "black")
df.complete2 = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
"Function(2ndVar)" = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),
each=100),6))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("dodgerblue","darkorange"))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("dodgerblue","darkorange"))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("dodgerblue","darkorange"))
devtools::document()
devtools::install()
#Using a 'minimal' data.frame:
df.minimal = data.frame(
Samples = rep(paste0("Sample",c(1:2)),each = 1000),
Values=c(rnorm(1000,0), rnorm(1000, 0.5)))
ggcraviola(data = df.minimal, lines.col = "black")
#Using a 'complete' data.frame:
df.complete = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)))
ggcraviola(data = df.complete, lines.col = "black")
#Using a 'complete' data.frame with support of an additional variable:
df.complete2 = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
Scnd.Var = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),
each=100),6))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)
#Use ggplot2 to add components and customize the Craviola plot
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("dodgerblue","darkorange"))
devtools::document()
devtools::install()
library(BiocompR)
#Using a 'minimal' data.frame:
df.minimal = data.frame(
Samples = rep(paste0("Sample",c(1:2)),each = 1000),
Values=c(rnorm(1000,0), rnorm(1000, 0.5)))
ggcraviola(data = df.minimal, lines.col = "black")
#Using a 'complete' data.frame:
df.complete = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)))
ggcraviola(data = df.complete, lines.col = "black")
#Using a 'complete' data.frame with support of an additional variable:
df.complete2 = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
Scnd.Var = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),
each=100),6))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)
#Using a 'complete' data.frame with support of an additional variable:
df.complete2 = data.frame(
Samples=rep(paste0("Sample",c(1:6)),each = 1000),
Groups=rep(c('A','B','C'),each = 2000),
Conditions=rep(c('I','J'),each = 1000,3),
Values=c(rnorm(1000,0), rnorm(1000, 0.5),
rnorm(1000, 3), rnorm(1000, 3.5),
rnorm(1000,-3), rnorm(1000, -3.5)),
Scnd.Var = rep(rep(x =c(60,50,40,30,20,10,30,40,50,60),
each=100),6))
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE)
#Use ggplot2 to add components and customize the Craviola plot
ggcraviola(data = df.complete2, lines.col = "black", bins = TRUE) +
labs(alpha = "SD(2nd Variable)") +
ggtitle("This is a Craviola plot!") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(color = "grey"),
panel.grid.minor.y = element_line(color = "grey")) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(labels = c("Control","Case"),
values = c("dodgerblue","darkorange"))
